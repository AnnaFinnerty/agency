{"version":3,"sources":["Scripts/Helpers.js","Components/Industry/modal.js","Components/Agency/modal.js","Components/Header/index.js","Components/Email/view.js","Components/Email/new.js","Components/Email/index.js","Components/Tasks/index.js","Components/Employee/icon.js","Components/Project/ProjectOptions.js","Components/Employee/index.js","Components/Project/index.js","Components/Main/index.js","Components/Modal/context.js","Components/Sidebar/index.js","Components/Message/index.js","Scripts/Player.js","Scripts/Agency.js","Scripts/RandomAgency.js","Scripts/Employee.js","Scripts/MatchEmployeeToProject.js","Scripts/RandomEmployee.js","Scripts/Company.js","Scripts/RandomCompany.js","Scripts/Project.js","Scripts/RandomProject.js","Scripts/Industry.js","Scripts/RandomEmail.js","Scripts/RandomMessage.js","Components/Content/index.js","Components/App/index.js","serviceWorker.js","index.js"],"names":["Helpers","prototype","RandomFromArray","arr","Math","floor","random","length","RandomBetweenInts","start","end","XRandomWithoutRepeats","x","tempArr","fill","i","monify","num","toString","replace","IndustryModal","state","helpers","console","log","this","props","industry","clients","map","client","Card","Content","Header","name","Description","rep","full","competitors","competitor","income","monthlyProfit","Modal","open","style","height","Button","onClick","closeModal","float","Grid","columns","Column","width","Row","Component","AgencyModal","agency","yearsInOperation","coh","monthlyExpenditures","maxSalary","openModal","setState","openFull","elem","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fullscreen","closeFull","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","industryModalOpen","agencyModalOpen","profit","loss","Fragment","celled","padding","marginTop","textAlign","employeeStats","productivity","happiness","score","reputation","hour","month","day","startYear","year","timeRunning","stopTimer","Icon","color","size","startTimer","ViewEmailModal","considerProject","email","target","closeEmail","acceptProject","hireApplicant","dismissApplicant","resolveTask","generateTask","text","sender","level","dismissTask","forward","sent","sendEmail","reply","actions","type","subject","time","Actions","NewEmailModal","onChange","e","data","selected","value","onSubmit","suggestions","first","last","display","short","subtype","cost","suggestionOptions","suggestion","key","Dropdown","fluid","selection","options","Email","changeVisibleInbox","boxShowing","newEmail","currentEmail","openEmail","emailIndex","readEmail","emails","filter","archived","selectedEmails","className","overflow","read","archiveEmail","selectedEmail","Container","marginBottom","addPane","Tasks","addTask","newTaskInput","urgencyColors","tasks","task","borderRadius","margin","urgency","Form","Input","PersonalIcon","backgroundImage","icon","ProjectOptions","projectOptions","projects","project","id","unshift","placeholder","changeProject","Employee","raiseSalary","updatedEmployee","info","updateEmployee","lowerSalary","promote","updateEmployeeLevel","demote","newProject","projectId","skills","skill","salary","skillScores","skillset","title","fireEmployee","stats","match","Project","budget","required","requirements","requirement","optional","workers","worker","removedWorker","employeeOptions","employees","employee","skilltext","accepted","rejectProject","parent","maxWidth","y","percentComplete","estimatedMonthsToCompletion","monthsActive","satisfaction","monthsToCompletion","payInInstallments","sector","addedEmployee","push","withdrawProject","Main","getPane","getPaneName","buildPane","pane","paneName","menuItem","Menu","Item","updatePane","pinned","removePane","render","Tab","Pane","panes","backgroundColor","overflowX","activeIndex","activePane","ModalContext","React","createContext","Sidebar","shortName","onVacation","considering","applicants","applicant","overflowY","borderBottom","paddingTop","SidebarWrapper","Consumer","Message","close","addMessage","messages","message","position","right","Feed","flexDirection","justifyContent","Player","augmentScore","points","augmentHappiness","decrementHappiness","augmentReputation","decrementReputation","Agency","experience","debit","amt","calculateAgencyParameters","totalSalaries","totalIncome","calculatePayment","overhead","monthlySalaries","numActiveProjects","Date","getFullYear","completedProjects","autoUpdate","RandomAgency","icons","generateRandomAgency","isFake","randomAgencyName","r","second","gender","age","focus","quit","currentRequest","daysWaitedOnRequest","onVaction","vacationDaysRemaining","days","projectSkills","job","MatchEmployeeToProject","matchScore","employeeSkills","Object","keys","includes","RandomEmployee","employeeId","maxLeaders","currentLeaders","usedNames","femaleIcons","maleIcons","neutralIcons","generateStartEmployees","numEmployees","numLeaders","startProjects","employeesByProject","startEmployees","generateRandomEmployee","randomFromArray","calculateProductivity","generateEmployeeID","positionLevel","randomGender","randomName","randomBetweenInts","maxLevel","randomSkillset","randomStats","skillSet","skillsets","ux","frontend","backend","datascience","management","focii","focusOne","focusTwo","skillsSelection","randomSkills","creativity","accuracy","curiosity","dedication","first_name","first_name_male","first_name_female","combine","concat","lastName","charAt","Company","activeProject","RandomCompany","randomEmployee","generateRandomCompany","sectors","projectSectors","names","randomCompanyName","minCost","maxCost","minDesign","maxDesign","firstwords","secondwords","company","totalPaid","payment","onTime","complete","w","RandomProject","generateRandomProject","isStartProject","types","projectTypes","Industry","startCompetitors","maxCompetitors","randomCompany","randomAgency","randomProject","awake","monthlyUpdate","RandomEmail","generateRandomEmail","boss","employee1","employee2","bossEmail","generateEmail","happyEmail","complaintEmail","requestEmail","applicantEmail","projectEmail","completeEmail","welcomeEmail","quitEmail","junkEmail","junkSubject","junkBody","importance","requestBody","accept","complaintBody","applicantBody","consider","quitBody","happyBody","fireEmail","RandomMessage","generateRandomMessage","generateMessage","junkMessage","starred","numStartEmployees","numStartProjects","startApplicants","startEmails","newProjectEmail","randomEmailGenerator","randomEmployeeGenerator","appEmail","startProject","sortedEmployees","sortEmployees","startTask","createTask","interval","setInterval","update","hourLength","player","newEmployeeStats","employeeStatsRaw","a","t","splice","projectsToDelete","endTask","b","updateParams","emailFrequency","employee3","randomMessageGenerator","projectFrequency","finalEmails","finalMessages","clearInterval","removeWorker","sort","satisfy","updatedEmail","deleteEmail","action","requester","newTask","vacation","requestSatisfied","requestDenied","checkTaskResolution","array","taskType","targetId","consideredProject","rejectedProject","withdrawnProject","openMessage","closeMessage","fired","sidebarRight","totalPositions","randomProjectGenerator","messageOpen","App","testing","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec987e32.chunk.js","sourcesContent":["function Helpers(){}\n\nHelpers.prototype.RandomFromArray = function(arr){\n    return arr[Math.floor(Math.random()*arr.length)]\n}\n\nHelpers.prototype.RandomBetweenInts = function(start,end){\n    return Math.floor(Math.random()*(end-start)) + start\n}\n\n//find a random number of items from an array, without repeating\nHelpers.prototype.XRandomWithoutRepeats = function(arr,x){\n    const tempArr = [];\n    tempArr.fill(0,arr.length-1);\n    for(let i = 0; i < x; i++){\n        const r = Math.floor(Math.random()*tempArr);\n\n    }\n}\n\nHelpers.prototype.monify = function(num){\n   return '$' + num.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n}\n\nexport default Helpers","import React, {Component} from 'react';\nimport Helpers from '../../Scripts/Helpers';\n\nimport {Modal, Grid,Card, Button} from 'semantic-ui-react';\n\nclass IndustryModal extends Component{\n    constructor(){\n        super()\n        this.state = {}\n        this.helpers = new Helpers();\n    }\n    render(){\n        console.log('industry props',this.props.industry)\n        const clients = this.props.industry.clients.map((client)=>{\n            return(\n                <Card>\n                    <Card.Content>\n                        <Card.Header>{client.name}</Card.Header>\n                        <Card.Description>\n                            Rep: {client.rep.name.full}\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            )\n        })\n        const competitors = this.props.industry.competitors.map((competitor)=>{\n            const income = this.helpers.monify(competitor.monthlyProfit * 12)\n            return(\n                <Card>\n                    <Card.Content>\n                        <Card.Header>{competitor.name}</Card.Header>\n                        <Card.Description>\n                            Yearly income: {income}\n                        </Card.Description>\n                    </Card.Content>\n                </Card>\n            )\n        })\n        return(\n            <Modal open={this.props.open} style={{height:'90vh'}}>\n                <Modal.Header>\n                    Industry\n                    <Button onClick={()=>this.props.closeModal('industryModalOpen')} style={{float:'right'}}>X</Button>\n                </Modal.Header>\n                <Modal.Content>\n                    <Grid columns={2}>\n                        <Grid.Column width={8}>\n                            <Grid.Row>clients</Grid.Row>\n                            {clients}\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Grid.Row>competitors</Grid.Row>\n                            {competitors}\n                        </Grid.Column>\n                    </Grid>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default IndustryModal","import React, {Component} from 'react';\n\nimport {Modal,Grid, Button} from 'semantic-ui-react';\n\nclass AgencyModal extends Component{\n    constructor(){\n        super()\n        this.state = {}\n    }\n//     coh: 100000\n// maxSalary: 300000\n// monthlyExpenditures: 300000\n// monthlyProfit: 100000\n// name: \"Web Brands\"\n// yearsInOperation: 1\n    render(){\n        // console.log('agency modal props',this.props)\n        return(\n            <Modal open={this.props.open} style={{height:'90vh'}}>\n                <Modal.Header>\n                    {this.props.agency.name}\n                    <Button onClick={()=>this.props.closeModal('agencyModalOpen')} style={{float:'right'}}>X</Button>\n                </Modal.Header>\n                <Modal.Content>\n                <Modal.Description>\n                    <Grid columns={2}>\n                        <Grid.Column>\n                            <Grid.Row>Years of Operation:</Grid.Row>\n                            <Grid.Row>Cash on Hand:</Grid.Row>\n                            <Grid.Row>Monthly Expenses:</Grid.Row>\n                            <Grid.Row>Monthly Income:</Grid.Row>\n                            <Grid.Row>Active Projects:</Grid.Row>\n                            <Grid.Row>Total Employees:</Grid.Row>\n                            <Grid.Row>Highest Salary:</Grid.Row>\n                            <Grid.Row>Lowest Salary:</Grid.Row>\n                            <Grid.Row>Average Salary:</Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Grid.Row>{this.props.agency.yearsInOperation}</Grid.Row>\n                            <Grid.Row>{this.props.agency.coh}</Grid.Row>\n                            <Grid.Row>{this.props.agency.monthlyExpenditures}</Grid.Row>\n                            <Grid.Row>{this.props.agency.monthlyProfit}</Grid.Row>\n                            <Grid.Row>Active Projects:</Grid.Row>\n                            <Grid.Row>Total Employees:</Grid.Row>\n                            <Grid.Row>{this.props.agency.maxSalary}</Grid.Row>\n                            <Grid.Row>Lowest Salary:</Grid.Row>\n                            <Grid.Row>Average Salary:</Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n                </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nexport default AgencyModal","import React, {Component} from 'react';\n\nimport IndustryModal from '../Industry/modal';\nimport AgencyModal from '../Agency/modal';\nimport Helpers from '../../Scripts/Helpers';\n\n\nimport '../../App.css';\nimport { Grid, Button, Icon } from 'semantic-ui-react';\n\nclass Header extends Component{\n  constructor(){\n    super()\n    this.state = {\n       industryModalOpen: false,\n       agencyModalOpen: false,\n       fullscreen: false,\n    }\n    this.helpers = new Helpers();\n  }\n  openModal = (name) => {\n    this.setState({\n      [name]: true\n    })\n  }\n  closeModal = (name) => {\n    this.setState({\n      [name]: false\n    })\n  }\n  openFull = () => {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) { /* Firefox */\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { /* IE */\n      elem.msRequestFullscreen();\n    }\n    this.setState({\n      fullscreen: true\n    })\n  }\n  closeFull = () => {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) { /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) { /* IE */\n      document.msExitFullscreen();\n    }\n    this.setState({\n      fullscreen: false\n    })\n  }\n  render(){\n    // console.log('header props:', this.props)\n    const coh = this.helpers.monify(this.props.agency.coh)\n    const profit = this.helpers.monify(this.props.agency.monthlyProfit);\n    const loss = this.helpers.monify(this.props.agency.monthlyExpenditures)\n    return (\n      <React.Fragment>\n        <header>\n          <nav>\n            <Grid celled='internally'>\n                <Grid.Column width={5} style={{padding:\"0 10px\"}}>\n                  <h3>{this.props.agency.name}</h3>\n                  <h5 style={{marginTop:\"0\"}}>{this.props.agency.yearsInOperation} years in operation</h5>\n                  <Grid.Row>\n                    <button onClick={()=>this.openModal('agencyModalOpen')}>agency</button>\n                    <button onClick={()=>this.openModal('industryModalOpen')}>industry</button>\n                  </Grid.Row>\n                </Grid.Column>\n                <Grid.Column width={3} style={{padding:\"0 10px\",textAlign:\"right\"}}>\n                  <Grid.Row>Cash on Hand</Grid.Row>\n                  <Grid.Row>Income/Month</Grid.Row>\n                  <Grid.Row>Loss/Month</Grid.Row>\n                  <Grid.Row>Emp.Productivity</Grid.Row>\n                  <Grid.Row>Emp.Happiness</Grid.Row>\n                </Grid.Column>\n                <Grid.Column width={3} style={{padding:\"0\"}}>\n                  <Grid.Row>{coh}</Grid.Row>\n                  <Grid.Row>{profit}</Grid.Row>\n                  <Grid.Row>{loss}</Grid.Row>\n                  <Grid.Row>{this.props.employeeStats.productivity}%</Grid.Row>\n                  <Grid.Row>{this.props.employeeStats.happiness}%</Grid.Row>\n                </Grid.Column>\n                \n                <Grid.Column width={3} style={{padding:\"0\"}}>\n                <Grid.Row>Score:{this.props.score}/Rep:{this.props.reputation}</Grid.Row>\n                  <Grid.Row>\n                      <span>{this.props.hour < 10 ? \"0\" + this.props.hour + \":00\" : this.props.hour + \":00\"}</span>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <span>{this.props.month}</span>/<span>{this.props.day}</span>/<span>{this.props.startYear+this.props.year}</span>\n                  </Grid.Row>\n                  <Grid.Row >\n                    {\n                      !this.props.timeRunning ? \n                      <Button color=\"green\" size=\"small\" style={{padding:\"7%\",height:'5vh'}} onClick={this.props.startTimer}><Icon name=\"play\"></Icon></Button>\n                      :\n                      <Button onClick={this.props.stopTimer} style={{padding:\"7%\",height:'5vh'}}><Icon color=\"red\" name=\"stop\"></Icon></Button>\n                    }\n                    {\n                      !this.state.fullscreen ?\n                      <Button onClick={this.openFull} style={{padding:\"7%\",height:'5vh'}}><Icon name=\"window maximize outline\"></Icon></Button>\n                      :\n                      <Button onClick={this.closeFull} style={{padding:\"7%\",height:'5vh'}}><Icon name=\"window restore outline\"></Icon></Button>\n                    }\n                  </Grid.Row>\n                </Grid.Column>     \n            </Grid>\n          </nav>\n      </header>\n      {\n        !this.state.industryModalOpen ? '' :\n        <IndustryModal industry={this.props.industry} open={this.state.industryModalOpen} closeModal={this.closeModal} />\n      }\n      {\n        !this.state.agencyModalOpen ? '' :\n        <AgencyModal agency={this.props.agency} open={this.state.agencyModalOpen} closeModal={this.closeModal} />\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\n\nimport {Modal, Header,Button,Icon} from 'semantic-ui-react';\nclass ViewEmailModal extends Component{\n    constructor(){\n        super();\n        this.state = {\n            reply: false,\n        }\n    }\n    considerProject = () => {\n        this.props.considerProject(this.props.email.target);\n        this.props.closeEmail();\n    }\n    acceptProject = () => {\n        this.props.acceptProject(this.props.email.target);\n        this.props.closeEmail();\n    }\n    hireApplicant = () => {\n        this.props.hireApplicant(this.props.email.target);\n        this.props.closeEmail();\n    }\n    dismissApplicant = () => {\n        this.props.dismissApplicant(this.props.email.target);\n        this.props.closeEmail();\n    }\n    resolveTask = () => {\n        this.props.resolveTask(null,this.props.email);\n        this.props.closeEmail();\n    }\n    generateTask = () => {\n        this.props.generateTask(this.props.email.text,this.props.email.sender.level, this.props.email.sender);\n        this.props.closeEmail();\n    }\n    dismissTask = () => {\n        this.props.dismissTask(null, this.props.email);\n        this.props.closeEmail();\n    }\n    forward = () => {\n        this.props.closeEmail();\n        const email = this.props.email;\n        email.sent = true;\n        email.forward = true;\n        this.props.sendEmail(email);\n    }\n    render(){\n        console.log('email view props', this.props)\n        let actions;\n        switch(this.props.email.type){\n\n            case \"task\":\n                actions =\n                    <React.Fragment>\n                        <Button onClick={this.generateTask}>Yeah, let's do it</Button>\n                        <Button onClick={this.dismissTask}>Sorry, maybe another time</Button>\n                        <Button onClick={this.dismissTask}><Icon name=\"mail forward\"></Icon></Button>\n                    </React.Fragment>\n                break\n\n            case \"request\":\n                actions =\n                    <React.Fragment>\n                        <Button onClick={this.resolveTask}>Sure, no problem</Button>\n                        <Button onClick={this.dismissTask}>Sorry, maybe another time</Button>\n                        <Button onClick={this.dismissTask}><Icon name=\"mail forward\"></Icon></Button>\n                    </React.Fragment>\n                break\n\n            case \"project\":\n                actions =\n                    <React.Fragment>\n                        <Button onClick={this.considerProject}>Sure, we'll consider you</Button>\n                        <Button onClick={this.acceptProject}>Yeah, let's do it</Button>\n                        <Button >Sorry, maybe another time</Button>\n                        <Button onClick={this.forward}><Icon name=\"mail forward\"></Icon></Button>\n                    </React.Fragment>\n                break\n\n            case \"application\":\n                actions =\n                    <React.Fragment>\n                        <Button onClick={this.hireApplicant}>You're hired!</Button>\n                        <Button onClick={this.dismissApplicant}>Sorry, maybe another time</Button>\n                        <Button onClick={this.forward}><Icon name=\"mail forward\"></Icon></Button>\n                    </React.Fragment>\n                break\n\n            default:\n                actions =\n                    <React.Fragment>\n                        <Button onClick={this.forward}><Icon name=\"mail forward\"></Icon></Button>\n                    </React.Fragment>\n                break\n        }\n   \n    \n    return(\n        <Modal open={this.props.open}>\n        <Modal.Header>\n            {this.props.email.subject}|\n            {this.props.email.time.hour < 10 ? \"0\" + this.props.email.time.hour + \":00\" : this.props.email.time.hour + \":00\"} {this.props.email.time.day}/ {this.props.email.time.month}/{this.props.email.time.year}\n            <Button onClick={this.props.closeEmail} style={{float:'right'}}>\n                X\n            </Button>\n        </Modal.Header>\n        <Modal.Content>\n        <Header>{this.props.email.sender.name.email}</Header>\n        <Header>to: you@companyname.com</Header>\n        <Modal.Description>\n            {this.props.email.text}\n        </Modal.Description>\n        </Modal.Content>\n        <Modal.Header>Reply</Modal.Header>\n        <Modal.Actions>\n            {actions}\n        </Modal.Actions>\n    </Modal>\n    )\n    }\n    \n}\n\nexport default ViewEmailModal","import React, { Component } from 'react'\n\nimport {Modal,Dropdown,Button} from 'semantic-ui-react';\n\nclass NewEmailModal extends Component{\n    constructor(){\n        super()\n        this.state = {\n            selected: 0,\n        }\n        this.suggestions = [\n            {\n                subject:\"Hey, let's have a party\",\n                text: \"Work is stressful. Let's have a party and relax a little!\",\n                cost:100,\n                happiness: 10,\n            },\n            {\n                subject:\"Happy hour tonight\",\n                text:\"First rounds on me at happy hour. Hope to see you all there!\",\n                cost:0,\n                happiness: 10,\n            },\n            {\n                subject:\"Let's be more productive\",\n                text:\"I think we should all try to work harder\",\n                cost:0,\n                happiness: -10,\n            }\n        ]\n    }\n    onChange = (e,data) => {\n        this.setState({\n            selected:data.value\n        })\n    }\n    onSubmit = () => {\n        this.props.closeEmail();\n        const email = {\n            subject: this.suggestions[this.state.selected].subject,\n            text: this.suggestions[this.state.selected].subject,\n            sender: {name:{\n                first:\"\", \n                last: \"\", \n                full:\"me\",\n                display: \"me\",\n                short: \"me\",\n                email: 'me@'\n            }},\n            time: 'time',\n            sent: true,\n            type: 'request',\n            subtype: 'money',\n            cost: this.suggestions[this.state.selected].cost\n        }\n        this.props.sendEmail(email);\n    }\n    render(){\n        const suggestionOptions = this.suggestions.map((suggestion,i)=>(\n            {\n                key: i,\n                value: i,\n                text: suggestion.subject\n            }\n        ))\n        return(\n            <Modal open={this.props.open} style={{height:'60vh'}}>\n                <Modal.Header>\n               \n                Subject: \n                <Dropdown\n                    style={{width:\"20vw\",display:\"inline\"}}\n                    value={this.state.selected}\n                    fluid\n                    selection\n                    options={suggestionOptions}\n                    onChange={this.onChange}\n                />\n                    <Button onClick={this.props.closeEmail} style={{float:'right'}}>\n                        X\n                    </Button>\n                </Modal.Header>\n                <Modal.Content>\n                <Modal.Description>\n                    {this.suggestions[this.state.selected].text}\n                </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button onClick={this.onSubmit}>Send</Button>\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nexport default NewEmailModal","import React, {Component} from 'react';\n\nimport ViewEmailModal from './view';\nimport NewEmailModal from './new';\n\nimport '../../App.css';\nimport{ Container, Grid, Icon, Button } from 'semantic-ui-react';\n\nclass Email extends Component{\n  constructor(){\n    super();\n    this.state = {\n      boxShowing: 'inbox',\n      openEmail: false,\n      newEmail: false,\n      currentEmail: null\n    }\n  }\n  changeVisibleInbox = (type) => {\n    this.setState({\n      boxShowing: type\n    })\n  }\n  newEmail = () => {\n    this.setState({\n      currentEmail: null,\n      boxShowing: 'inbox',\n      openEmail: false,\n      newEmail: true\n    })\n  }\n  openEmail = (emailIndex) => {\n    this.props.readEmail(emailIndex);\n    this.setState({\n      currentEmail: emailIndex,\n      openEmail: true\n    })\n  }\n  closeEmail = () => {\n    this.setState({\n      currentEmail: null,\n      openEmail: false,\n      newEmail: false,\n    })\n  }\n  render(){\n    // console.log('emails props',this.props.emails)\n    let emails = this.props.emails;\n    if(this.state.boxShowing === 'inbox'){\n      emails = this.props.emails.filter((email)=> !email.archived )\n    } else if (this.state.boxShowing === 'sent'){\n      emails = this.props.emails.filter((email)=> email.sent )\n    }\n    const selectedEmails = !emails.length ? '' : emails.map((email,i)=>{\n      return(\n        <Grid key={'email_'+i} columns={5} className=\"hover\" style={{height:\"5vh\",overflow:'hidden'}}>\n          <Grid.Column width={1} onClick={()=>this.openEmail(i)}>\n            <Icon style={{color:email.read?\"gray\":\"black\"}} name=\"mail\"></Icon>\n          </Grid.Column>\n          <Grid.Column width={3} onClick={()=>this.openEmail(i)}>\n            {email.sender.name.display} \n          </Grid.Column>  \n          <Grid.Column width={3} onClick={()=>this.openEmail(i)}>\n            {email.subject}\n          </Grid.Column>\n          <Grid.Column width={5} onClick={()=>this.openEmail(i)}>\n             {email.text}\n          </Grid.Column>\n          <Grid.Column width={2}onClick={()=>this.openEmail(i)}>\n             {email.time.hour < 10 ? \"0\" + email.time.hour + \":00\" : email.time.hour + \":00\"} {email.time.day}/ {email.time.month}/{email.time.year}\n          </Grid.Column>\n          <Grid.Column width={1} onClick={()=>this.props.archiveEmail(i)}>\n            {\n              this.state.boxShowing !== 'inbox' ? '' :\n              <Icon name=\"archive\"></Icon> \n            } \n          </Grid.Column>         \n        </Grid> \n\n      )\n    })\n    const selectedEmail = this.state.openEmail ? this.props.emails[this.state.currentEmail] : \"\";\n    return (\n      <React.Fragment>\n        <Container style={{height:'85vh'}}>\n          <h2>Email</h2>\n          <Button onClick={this.newEmail}>+</Button>\n          <Button onClick={()=>this.changeVisibleInbox('inbox')}>inbox</Button>\n          <Button onClick={()=>this.changeVisibleInbox('sent')}>sent</Button>\n          <Button onClick={()=>this.changeVisibleInbox('all')}>all</Button>\n          <hr style={{marginBottom:\"5vh\"}}></hr>\n          {selectedEmails}\n        </Container>\n        {\n          !this.state.currentEmail ? '':\n          <ViewEmailModal open={this.state.openEmail} \n                          email={selectedEmail} \n                          closeEmail={this.closeEmail}\n                          sendEmail={this.props.sendEmail}  \n                          addPane={this.props.addPane}\n                          acceptProject={this.props.acceptProject}\n                          considerProject={this.props.considerProject}\n                          hireApplicant={this.props.hireApplicant}\n                          dismissApplicant={this.props.dismissApplicant}\n                          resolveTask={this.props.resolveTask}\n                          generateTask={this.props.generateTask}\n                          dismissTask={this.props.dismissTask}\n                          />\n        }\n        {\n          !this.state.newEmail ? '':\n          <NewEmailModal open={this.state.newEmail} \n                         closeEmail={this.closeEmail}\n                         sendEmail={this.props.sendEmail} \n                         />\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Email;\n","import React, {Component} from 'react';\n\nimport '../../App.css';\nimport { Header, Form, Input, Button, Icon } from 'semantic-ui-react'\n\nclass Tasks extends Component {\n  constructor(props){\n      super();\n      this.state = {\n          newTaskInput: '',\n      }\n      this.urgencyColors = ['dimgray','black','yellow','orange','firebrick']\n  }\n  onSubmit = (e) => {\n    this.props.addTask(this.state.newTaskInput)\n  }\n  onChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n  }\n  render(){\n    console.log('tasks props', this.props);\n    const tasks = this.props.tasks.map((task, i) => {\n        return(\n            <div key={i} className='task'>\n                 <Button style={{padding:'3px',borderRadius:'100%'}}>\n                    <Icon style={{margin:'0',color:this.urgencyColors[task.urgency]}} name='circle'></Icon>\n                 </Button>\n                <span>{task.text}</span>\n                <Button onClick={()=>this.props.dismissTask(i)} style={{padding:'3px',borderRadius:'100%'}}>\n                    <Icon style={{margin:'0'}} name='remove'></Icon>\n                </Button>\n            </div>\n        )\n    })\n    return (\n        <div>\n            <Header>Tasks</Header>\n            <Form>\n                <Input name='newTaskInput' value={this.state.newTaskInput} onChange={(e)=>this.onChange(e)} ></Input>\n                <Button onClick={this.onSubmit}>Submit</Button>\n            </Form>\n            <ul>\n                {tasks}\n            </ul>\n        </div>\n      );\n  }\n}\n\nexport default Tasks;","import React from 'react';\n\nconst PersonalIcon = (props) => (\n    <div className=\"personal-icon\" style={{backgroundImage:\"url('/icons/\"+props.icon+\".png')\"}}></div>\n)\n\nexport default PersonalIcon;","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react'\n\nconst ProjectOptions = (props) => {\n    const projectOptions = props.projects.map((project,i)=>{\n        return(\n          {\n            key: project.id,\n            text: project.name,\n            value: i\n          }\n        )\n      })\n\n    projectOptions.unshift({\n    key: '000',\n    text: 'none',\n    value: null\n    })\n    return(\n        <Dropdown\n                  placeholder='Switch Project'\n                  fluid\n                  selection\n                  options={projectOptions}\n                  onChange={props.changeProject}\n                />\n    )\n}\n\nexport default ProjectOptions","import React, { Component } from 'react';\n\nimport PersonalIcon from './icon';\nimport Helpers from '../../Scripts/Helpers';\nimport ProjectOptions from '../Project/ProjectOptions.js';\n\nimport '../../App.css';\nimport { Grid, Button} from 'semantic-ui-react'\n\nclass Employee extends Component {\n  constructor(){\n    super()\n  }\n  raiseSalary = () => {\n    const updatedEmployee = this.props.info;\n    updatedEmployee.raiseSalary();\n    this.props.updateEmployee(updatedEmployee);\n  }\n  lowerSalary = () => {\n    const updatedEmployee = this.props.info;\n    updatedEmployee.lowerSalary();\n    this.props.updateEmployee(updatedEmployee);\n  }\n  promote = () => {\n    const updatedEmployee = this.props.info;\n    updatedEmployee.promote();\n    this.props.updateEmployeeLevel(updatedEmployee);\n  }\n  demote = () => {\n    const updatedEmployee = this.props.info;\n    updatedEmployee.demote();\n    this.props.updateEmployeeLevel(updatedEmployee);\n  }\n  changeProject = (e,data) => {\n    console.log('changing project to:', data.value);\n    const newProject = this.props.projects[data.value];\n    const updatedEmployee = this.props.info;\n    //MTC change to run off employee method that also updates id\n    updatedEmployee.project = newProject ? newProject : null;\n    updatedEmployee.projectId = newProject ? newProject.id : null;\n    this.props.updateEmployeeLevel(updatedEmployee);\n  }\n\n  render(){\n    console.log('employee pprops',this.props);\n    const skills = this.props.info.skills.map((skill,i) => {\n      return(\n        <li key = {i}>{skill}</li>\n      )\n    })\n  const helpers = new Helpers();\n  const salary = helpers.monify(this.props.info.salary);\n  \n                                                                                        const skillScores = this.props.info.skills.map((skill,i)=>{\n    return <li key={'skill_'+i}>{this.props.info.skillset[skill]}</li>\n  })\n  return (     \n      <Grid celled>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <h2>\n              <PersonalIcon icon={this.props.info.icon}/>\n              {this.props.info.name.full}</h2>\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {this.props.info.title}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            ID:{this.props.info.id}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {\n              this.props.info.level === 5 ? '' :\n              this.props.type !== \"applicant\" ? \n              <Button onClick={()=>this.props.fireEmployee(this.props.info.id)}>fire</Button>\n              :\n              <Button onClick={()=>this.props.hireApplicant(this.props.info)}>hire</Button>\n            }\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            Productivity:\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {this.props.info.stats.productivity}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            Happiness\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {this.props.info.stats.happiness}\n          </Grid.Column>\n        </Grid.Row>\n        {\n          this.props.info.level === 5 || this.props.type === 'applicant' ? '' :\n          <Grid.Row>\n            <Grid.Column width={4}>\n              Project: {this.props.info.projectId ? this.props.info.project.name : \"unassigned\"}\n            </Grid.Column>\n            <Grid.Column width={4}>\n              Match: {this.props.info.projectId ? this.props.info.match : \"n/a\"}\n            </Grid.Column>\n            <Grid.Column width={4}>\n              Change Project:\n            </Grid.Column>\n            <Grid.Column width={4}>\n              <ProjectOptions projects={this.props.projects}\n                              changeProject={this.changeProject}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        }\n        <Grid.Row>\n          <Grid.Column width={4}>\n            Level:\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {this.props.info.level}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {\n              this.props.type === 'applicant'||this.props.info.level === 5 ? '' :\n              <Button onClick={this.promote}>Promote</Button>\n            }\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {\n              this.props.type === 'applicant'||this.props.info.level === 5 ? '' :\n              <Button onClick={this.demote}>Demote</Button>\n            }\n          </Grid.Column>\n        </Grid.Row>\n        \n        <Grid.Row>\n          <Grid.Column width={4}>\n            Salary:\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {salary}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {\n              this.props.type === 'applicant'||this.props.info.level === 5 ? '' :\n              <Button onClick={this.raiseSalary}>Raise</Button>\n            }\n           \n          </Grid.Column>\n          <Grid.Column width={4}>\n            {\n              this.props.type === 'applicant'||this.props.info.level === 5 ? '' :\n              <Button onClick={this.lowerSalary}>Lower</Button>\n            }\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            Skills:\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {skills}\n          </Grid.Column>\n          <Grid.Column width={4}>\n            {skillScores}\n          </Grid.Column>\n          <Grid.Column width={4}></Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n        </Grid.Row>\n      </Grid>\n  );\n  }\n}\n\nexport default Employee;","import React from 'react';\n\nimport {VictoryPie } from 'victory';\n\nimport '../../App.css';\nimport { Grid, Dropdown, Button, Icon } from 'semantic-ui-react';\nimport Helpers from '../../Scripts/Helpers';\n\nfunction Project(props) {\n  console.log('project props',props)\n  const removeEmployee = (removedWorker) => {\n    console.log('removing employee from project',removedWorker)\n    removedWorker.projectId = null;\n    removedWorker.project.workers = removedWorker.project.workers.filter((worker)=> worker.id !== removedWorker.id);\n    props.updateEmployee(removedWorker);\n  }\n  const addEmployee = (e,data) => {\n    \n    const addedEmployee = props.employees[data.value];\n    const project = props.info;\n    project.workers.push(addedEmployee);\n    addedEmployee.projectId = props.info.id;\n    addedEmployee.project = project;\n    \n\n    console.log('adding employee to project',data.value, addedEmployee)\n    props.updateEmployee(addedEmployee);\n  }\n  const helpers = new Helpers();\n  const budget = helpers.monify(props.info.budget)\n  const required = props.info.requirements.required.map((requirement,i) => {\n    return (\n      <li key={'required_'+i}>\n        {requirement}\n      </li>\n    )\n  })\n  const optional = props.info.requirements.optional.map((requirement,i) => {\n    return (\n      <li key={'optional_'+i}>\n        {requirement}\n      </li>\n    )\n  })\n  const workers = props.info.workers.map((worker) => {\n    const skills = worker.skills.map((skill,i)=>{\n      return(\n        <React.Fragment key={worker.id+\"_skill_\"+i}>\n          <Grid.Column width={2}>{skill}</Grid.Column>\n          <Grid.Column width={1}>{worker.skillset[skill]}</Grid.Column>\n        </React.Fragment>\n      )\n    })\n    return (\n      <Grid columns={4} key={worker.id}>\n          <Grid.Column width={4} onClick={()=>props.addPane('employee',worker)} className=\"hover\" >{worker.name.display}</Grid.Column>\n          {/* skills are returned already in columns */}\n          {skills}\n          <Grid.Column width={2}>\n              <Button onClick={()=>removeEmployee(worker)}>Remove</Button>\n          </Grid.Column>\n      </Grid>\n    )\n  })\n  const selectableEmployees = props.employees.filter((employee) => employee.level !== 5 && employee.projectId !== props.info.id)\n  const employeeOptions = selectableEmployees.map((employee,i)=>{\n    return(\n      {\n        key: employee.id,\n        text: employee.name.full + \": \" + employee.skilltext,\n        value: i\n      }\n    )\n  })\n  return (\n    <div>\n      <h2>{props.info.name}</h2>\n      <h3>Status: \n        {props.info.accepted ? \"active\" : \"not accepted\"}\n        {!props.info.accepted ? \n          <React.Fragment>\n            <Button onClick={()=>props.acceptProject(props.info)}>accept</Button>\n            <Button onClick={()=>props.rejectProject(props.info.id)}>reject</Button>\n          </React.Fragment> \n            : \n          \"\"\n        }\n      </h3>\n      <Grid>\n        <Grid.Column width={5} style={{textAlign:'center'}}>\n          Percent Complete\n          <VictoryPie\n            style={{ parent: { maxWidth: \"100%\" } }}\n            data={[\n              { x: \" \", y: props.info.percentComplete },\n              { x: \" \", y: 100-props.info.percentComplete },\n            ]}\n          />\n        </Grid.Column>\n        <Grid.Column width={5} style={{textAlign:'center'}}>\n          Time Remaining\n          <VictoryPie\n            style={{ parent: { maxWidth: \"100%\" } }}\n            data={[\n              { x: \" \", y: props.info.estimatedMonthsToCompletion },\n              { x: \" \", y: props.info.monthsActive },\n            ]}\n          />\n        </Grid.Column>\n      </Grid>\n      <Grid>\n        <Grid.Column width={4}>\n          <Grid.Row>Percent Complete</Grid.Row>\n          <Grid.Row>Productivity</Grid.Row>\n          <Grid.Row>Client Satisifaction</Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={1}>\n          <Grid.Row>{props.info.percentComplete}</Grid.Row>\n          <Grid.Row>{props.info.productivity}%</Grid.Row>\n          <Grid.Row>{props.info.satisfaction}%</Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Grid.Row>Est. months</Grid.Row>\n          <Grid.Row>Months left</Grid.Row>\n          <Grid.Row>Budget</Grid.Row>\n          <Grid.Row>Paid In Installments?</Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={1}>\n          <Grid.Row>{props.info.estimatedMonthsToCompletion}</Grid.Row>\n          <Grid.Row>{props.info.monthsToCompletion}</Grid.Row>\n          <Grid.Row>{budget}</Grid.Row>\n          <Grid.Row>{props.info.payInInstallments ? 'yes' : 'no'}</Grid.Row>\n        </Grid.Column>\n      </Grid>\n      <h2>Requirements</h2>\n      <Grid columns={2}>\n        <Grid.Column width={4}>\n          <Grid.Row>Sector</Grid.Row>\n          <Grid.Row>Required:</Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Grid.Row>{props.info.sector}</Grid.Row>\n          {required}\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Grid.Row>Type</Grid.Row>\n          <Grid.Row>Optional:</Grid.Row>\n        </Grid.Column>\n        <Grid.Column width={4}>\n        <Grid.Row>{props.info.type}</Grid.Row>\n        {optional}\n        </Grid.Column>\n      </Grid>\n      <h2>Personnel</h2>\n      <Icon name=\"user\"></Icon>\n      <Dropdown\n          placeholder='Add Employee'\n          fluid\n          selection\n          options={employeeOptions}\n          onChange={addEmployee}\n      />\n      <Grid columns={1}>\n        {workers}\n      </Grid>\n      {!props.info.accepted ? \n          \"\" \n            : \n          <Button onClick={()=>props.withdrawProject(props.info.id)}>withdraw from project</Button>\n      }\n    </div>\n  );\n}\n\nexport default Project;","import React, {Component} from 'react';\n\nimport Email from '../Email';\nimport Tasks from '../Tasks';\nimport Employee from '../Employee';\nimport Project from '../Project';\n\nimport { Menu, Tab, Icon } from 'semantic-ui-react'\nimport '../../App.css';\n\nclass Main extends Component {\n  getPane = (type,info) => {\n    switch(type){\n\n      case 'project':\n        return <Project \n                  {...info} \n                  addPane={this.props.addPane} \n                  acceptProject={this.props.acceptProject} \n                  rejectProject={this.props.rejectProject} \n                  withdrawProject={this.props.withdrawProject} \n                  updateEmployee={this.props.updateEmployee}\n                  employees={this.props.employees}\n                  projects={this.props.projects}\n                  />\n\n      case 'applicant':\n        return <Employee \n                  {...info} \n                  hireApplicant={this.props.hireApplicant} \n                  addPane={this.props.addPane}\n                />\n\n      case 'employee':\n        return <Employee \n                  {...info} \n                  updateEmployee={this.props.updateEmployee} \n                  updateEmployeeLevel={this.props.updateEmployeeLevel} \n                  fireEmployee={this.props.fireEmployee} \n                  addPane={this.props.addPane} \n                  projects={this.props.projects}\n                />\n\n      case \"email\":\n        return <Email \n                  emails={this.props.emails} \n                  addPane={this.props.addPane} \n                  readEmail={this.props.readEmail}\n                  archiveEmail={this.props.archiveEmail}\n                  considerProject={this.props.considerProject}\n                  acceptProject={this.props.acceptProject}\n                  hireApplicant={this.props.hireApplicant}\n                  dismissApplicant={this.props.dismissApplicant}\n                  resolveTask={this.props.resolveTask}\n                  dismissTask={this.props.dismissTask}\n                  generateTask={this.props.generateTask}\n                  sendEmail={this.props.sendEmail}\n                  />\n\n      case \"tasks\":\n        return <Tasks \n                  tasks={this.props.tasks} \n                  addPane={this.props.addPane} \n                  resolveTask={this.props.resolveTask}\n                  dismissTask={this.props.dismissTask}\n                  generateTask={this.props.generateTask}\n                />\n                  \n\n      default:\n        return null\n    }\n  }\n  getPaneName = (info) => {\n    switch(info.type){\n\n      case \"applicant\":\n        return info.info.name.display\n\n      case \"employee\":\n        return info.info.name.display\n\n      case \"project\":\n        return info.info.name\n\n      case \"email\":\n        return 'email (' + this.props.emails.length + ')'\n\n      case \"tasks\":\n        return 'tasks (' + this.props.tasks.length + ')'\n       \n      default:\n        return info.type\n    }\n  }\n  buildPane = (info,i) => {\n    // console.log('building pane',info)\n    const pane = this.getPane(info.type,info)\n    const paneName = this.getPaneName(info)\n    const item = { \n      menuItem: (\n        <Menu.Item key={info.type + \"-\" + info.id} onClick={()=>this.props.updatePane(i)}>\n          {\n            info.pinned ? <Icon name=\"map pin\"></Icon> : ''\n          }\n          {paneName}\n          {\n            info.pinned ? '' : \n            <button onClick={()=>this.props.removePane(i)}>X</button>\n          }\n        </Menu.Item>\n      ),\n      pinned: info.pinned, \n      render: () => <Tab.Pane fluid=\"true\">\n                      {pane}\n                    </Tab.Pane>\n    }\n    return item\n  }\n  render(){\n    // console.log('main props', this.props)\n    const panes = [];\n    for(let i = 0; i < this.props.panes.length; i++){\n      const pane = this.buildPane(this.props.panes[i],i);\n      panes.push(pane);\n    }\n    return (\n        <Tab style={{width:'100%',height:'90vh',backgroundColor:'whitesmoke',overflowX:'scroll'}} panes={panes} activeIndex={this.props.activePane}/>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst ModalContext = React.createContext({\n    open: false,\n    openModal: () => {}\n});\n\nexport default ModalContext;","import React from 'react';\n\nimport ModalContext from '../Modal/context'; \nimport PersonalIcon from '../Employee/icon';\n\nimport '../../App.css';\nimport { Tab, Grid, Menu, Icon } from 'semantic-ui-react'\n\nconst SidebarWrapper = (props) => {\n\n  return(\n    <ModalContext.Consumer>\n      {({open,openModal}) => (\n        <Sidebar {...props} open={open} openModal={openModal} />\n      )}\n    </ModalContext.Consumer>\n  )\n}\n\n//sections: employees, project\nfunction Sidebar(props) {\n  const employees = props.employees.map((employee) => {\n    return(\n      <div key={employee.id} className=\"hover\">\n        <Grid celled onClick={()=>props.addPane('employee',employee)}>\n          <Grid.Row columns={3}  style={{padding:'0'}}>\n              <Grid.Column width={6}>\n                <PersonalIcon icon={employee.icon}/>\n                {employee.name.display}\n                {\n                  employee.level === 5 ? \"*\" : \"\"\n                }\n              </Grid.Column>\n              <Grid.Column width={7}>\n                {employee.title}\n              </Grid.Column>\n              <Grid.Column width={1}>\n                {employee.level}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row columns={3} style={{padding:'0'}}>\n              <Grid.Column width={10}>\n                {\n                  !employee.projectId ? '' :\n                  employee.project.shortName\n                }\n              </Grid.Column>\n              <Grid.Column width={2}>\n                {employee.onVacation ? '0': employee.stats.productivity}%\n              </Grid.Column>\n              <Grid.Column width={1}>\n                {employee.stats.happiness}\n              </Grid.Column>\n          </Grid.Row>\n      </Grid>\n      </div>\n    )\n  })\n  const projects = props.projects.map((project) => {\n    if(project.accepted || project.considering){\n      return(\n        <Grid.Row className=\"hover\" columns={4} key={project.id} onClick={()=>props.addPane('project',project)}>\n          <Grid.Column width={7}>{project.name}</Grid.Column>\n          <Grid.Column width={1}><Icon name={project.accepted ? \"check\" : \"question\"}></Icon></Grid.Column>\n          <Grid.Column width={1}>{project.workers.length}</Grid.Column>\n          <Grid.Column width={1}>{project.productivity}%</Grid.Column>\n          <Grid.Column width={1}>{project.monthsToCompletion}</Grid.Column>\n          <Grid.Column width={1}>{project.percentComplete}%</Grid.Column>\n        </Grid.Row>\n      )\n    }\n  })\n  const applicants = props.applicants.map((applicant) => {\n    return(\n      <Grid.Row className=\"hover\" columns={3} key={applicant.id}> \n        <Grid.Column width={4} onClick={()=>props.addPane('applicant',applicant)}>\n        {applicant.name.display}\n        </Grid.Column>\n        <Grid.Column width={10} onClick={()=>props.addPane('applicant',applicant)}>\n          {applicant.skills.map((skill)=><span key={applicant.id+\"_\"+skill}>{skill}/</span>)}\n        </Grid.Column>\n        <Grid.Column width={2}>\n          <button onClick={()=>props.dismissApplicant(applicant.id)} >x</button>\n        </Grid.Column>\n      </Grid.Row>\n    )\n  })\n  const panes = [\n    { menuItem: (<Menu.Item style={{padding: '1vh 1vw'}}>Employees</Menu.Item>), \n      render: () => <Tab.Pane style={{height: '85vh',overflowY:\"scroll\",backgroundColor:'gainsboro'}}>{employees}</Tab.Pane> },\n    { menuItem: (<Menu.Item style={{padding: '1vh 1vw'}}>Applicants</Menu.Item>), \n      render: () => <Tab.Pane style={{height: '85vh',overflowY:\"scroll\",backgroundColor:'gainsboro'}}>\n                        <Grid columns={1}> {applicants}</Grid></Tab.Pane> },\n    { menuItem: (<Menu.Item style={{padding: '1vh 1vw'}}>Projects</Menu.Item>), \n      render: () => \n      <Tab.Pane style={{height: '85vh',overflowY:\"scroll\",backgroundColor:'gainsboro'}}>\n        <Grid columns={1}>\n          <Grid.Row columns={4} style={{borderBottom:\".5px solid dimgray\"}}>\n            <Grid.Column width={7}></Grid.Column>\n            <Grid.Column width={1}></Grid.Column>\n            <Grid.Column width={1}><Icon name=\"user\"/></Grid.Column>\n            <Grid.Column width={1}><Icon name=\"fire\"/></Grid.Column>\n            <Grid.Column width={1}><Icon name=\"calendar alternate\"/></Grid.Column>\n            <Grid.Column width={1}><Icon name=\"percent\"/></Grid.Column>\n          </Grid.Row>\n          {projects}\n        </Grid>\n      </Tab.Pane> },\n    // { menuItem: (<Menu.Item style={{padding: '1vh 1vw'}}>Jobs</Menu.Item>), \n    //   render: () => <Tab.Pane style={{height: '85vh',overflowY:\"scroll\",backgroundColor:'gainsboro'}}><Grid columns={1}>jobs</Grid></Tab.Pane> },\n  ]\n  return (\n    <aside>\n      <div style={{backgroundColor:\"white\",height:'14vh',paddingTop:'3vh'}}>\n        <h1 style={{color:\"black\"}}>agency</h1>\n      </div>\n      <Tab panes={panes} /> \n    </aside>\n  );\n}\n\nexport default SidebarWrapper;\n","import React, {Component} from 'react';\nimport {Feed,Input,Header,Button} from 'semantic-ui-react';\n\nclass Message extends Component{\n    constructor(){\n        super();\n        this.state = {\n            open: false,\n            text: '',\n        }\n    }\n    open = () => {\n        this.setState({\n            open: true\n        })\n    }\n    close = () => {\n        this.setState({\n            open: false\n        })\n    }\n    onChange = (e) => {\n        this.setState({\n            text: e.target.value\n        })\n    }\n    onSubmit = () => {\n        this.props.addMessage(this.state.text)\n    }\n    render(){\n        const messages = this.props.messages.map((message)=> {\n            return(\n                <div>{message.sender}: {message.text}</div>\n            )\n        })\n        return(\n            <div style={{overflow:\"hidden\"}} className={this.state.open ? 'message message-open': 'message message-closed'}>\n                <Header style={{position:'fixed',width:'100%',backgroundColor:\"dimgray\"}}>\n                    <Button onClick={this.state.open ? this.close : this.open} style={{right:'15px',position:'fixed',padding:'4px'}}>X</Button>\n                </Header>\n                {\n                    !this.state.open ? \"\" :\n                    <React.Fragment>\n                        <Feed style={{height:\"50vh\",marginTop:\"-20vh\", overflowY:\"scroll\", display:'flex',flexDirection:'column',justifyContent:'flex-end'}}>\n                            {messages}\n                        </Feed>\n                        <Input fluid placeholder=\"...\" value={this.state.text} onChange={this.onChange} ></Input>\n                    </React.Fragment>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Message","function Player(){\n    this.score = 0;\n    this.happiness = 95;\n    this.reputation = 75;\n}\n\nPlayer.prototype.augmentScore = function(points){\n    this.score += points;\n}\n\nPlayer.prototype.augmentHappiness = function(){\n    if(this.happiness + 1 <= 100){\n        this.happiness += 1;\n    }\n}\n\nPlayer.prototype.decrementHappiness = function(){\n    if(this.happiness - 1 >= 0){\n        this.happiness -= 1;\n    }\n}\n\nPlayer.prototype.augmentReputation = function(){\n    if(this.reputation + 1 <= 100){\n        this.reputation += 1;\n    }\n    this.augmentScore(5);\n}\n\nPlayer.prototype.decrementReputation = function(){\n    if(this.reputation - 1 >= 0){\n        this.reputation -= 1;\n    }\n}\n\nexport default Player;","class Agency{\n    constructor(name,coh, maxSalary, monthlyExpenditures, monthlyProfit, yearsInOperation, startYear, reputation, experience){\n        console.log('agency running');\n        this.name = name ? name : 'Web Brands';\n        this.coh = coh ? coh : 100000;\n        this.maxSalary = maxSalary ? maxSalary : 300000;\n        this.monthlyExpenditures = monthlyExpenditures ? monthlyExpenditures : 300000;\n        this.monthlyProfit = monthlyProfit ? monthlyProfit : 100000;\n        this.numActiveProjects = 3;\n        this.yearsInOperation = yearsInOperation ? yearsInOperation : 1;\n        this.startYear = startYear ? startYear: new Date().getFullYear() - 1 ;\n        this.reputation = reputation ? reputation : 50;\n        this.experience = experience ? experience : 0;\n        this.completedProjects = 0;\n        //date founded\n    }\n    debit = (amt) => {\n        this.coh -= amt;\n    }\n    calculateAgencyParameters = function(employees,projects){\n        console.log('updating agency info');\n        let totalSalaries = 0;\n        let totalIncome = 0;\n        for(let i = 0; i < employees.length; i++){\n            totalSalaries+=employees[i].salary;\n        }\n        for(let i = 0; i < projects.length; i++){\n            if(projects[i].accepted){\n                const monthlyPayment = projects[i].calculatePayment();\n                totalIncome+= monthlyPayment;\n            }\n        }\n        //increase overhead based on age of agency/number of employees\n        const overhead = employees.length * this.yearsInOperation;\n        const monthlySalaries = Math.floor(totalSalaries/12);\n        this.monthlyExpenditures = monthlySalaries + Math.floor(overhead/12);\n        this.monthlyProfit = totalIncome;\n    }\n    monthlyUpdate(projects){\n        console.log('end of month!')\n        let profit = 0;\n        for(let i = 0; i < projects.length; i++){\n            profit += projects[i].calculatePayment();\n        }\n        if(!projects){\n            //if there's no projects, this is an AI agency, which will use update randomly\n            this.autoUpdate();\n        } else {\n            //if there's a profit, this agency belongs to a player.\n            this.coh = this.coh + profit - this.monthlyExpenditures;\n        }\n        return projects\n    }\n    autoUpdate(){\n\n    }\n    completeProject(project){\n        this.completedProjects += 1;\n        \n    }\n}\n\nexport default Agency","import Agency from './Agency';\nimport Helpers from './Helpers';\n\nfunction RandomAgency(){\n    this.icons = ['compass','coffee','cut','sitemap']\n    this.helpers = new Helpers();\n}\n\nRandomAgency.prototype.generateRandomAgency = function(isFake){\n    const name = this.randomAgencyName();\n    // const icon = this.helpers.randomFromArray(this.icons);\n    const agency = new Agency(name);\n    return agency\n}\n\nRandomAgency.prototype.randomAgencyName = function(){\n    const firstWords = [\"Inspire\", \"Revolution\",\"Energize\",\"Creative\"];\n    const secondWords = [\"Digital\", \"Software\", \"Intelligence\",\"Solutions\"];\n    const r = Math.random();\n    const first = this.helpers.RandomFromArray(firstWords);\n    const second = this.helpers.RandomFromArray(secondWords);\n    if(r < .5){\n        return first + \" \" + second\n    } else {\n        return second + \" \" + first\n    }\n}\n\nexport default RandomAgency","class Employee{\n    constructor(id, name,icon, gender,age,level, title,focus,skills, skillset, stats, salary,project){\n        this.id = id;\n        this.name = name;\n        this.icon = icon;\n        this.gender = gender;\n        this.age = age;\n        this.level = level;\n        this.title = title;\n        this.focus = focus;\n        this.skills = skills;\n        this.skillset = skillset;\n        this.stats = stats;\n        this.salary = salary;\n        this.quit = false;\n        this.project = project;\n        this.projectId = project ? project.id : null;\n        this.match = null;\n        this.currentRequest = false;\n        this.daysWaitedOnRequest = 0;\n        this.onVaction = false;\n        this.vacationDaysRemaining = 0;\n    }\n    update(){\n        console.log('updating employee!');\n        const r = Math.random();\n        if(this.onVaction){\n            if(this.vacationDaysRemaining <= 0){\n                this.onVaction = false;\n            } else {\n                this.vacationDaysRemaining -= 1;\n            }\n        } else if(this.currentRequest){\n            //the employee will always lose happiness/productivity if they have a current unfilled request\n            if(this.daysWaitedOnRequest >=10 ){\n                //employee gives up on request if they've wait more than 10 days\n                this.currentRequest = false;\n                this.daysWaitedOnRequest = 0;\n            } else {\n                this.stats.happiness -= this.daysWaitedOnRequest;\n                this.stats.productivity -= this.daysWaitedOnRequest;\n            }\n\n        } else {\n            if(r < .1){\n                this.stats.happiness -= 1;\n            } else if (r > .9){\n                this.stats.happiness += 1;\n            }\n            const r2 = Math.random();\n            if(r2 < .1){\n                this.stats.productivity -= 1;\n            } else if (r > .9){\n                this.stats.productivity += 1;\n            }\n        }\n\n        if(this.stats.happiness < 5){\n            this.quit = true;\n        }\n    }\n    vacation(days){\n        console.log('going on vacation!');\n        this.onVaction = true;\n        this.vacationDaysRemaining = days;\n    }\n    promote(){\n        this.level += 1;\n        //title will be change back in content\n        this.stats.happiness = this.stats.happiness + 10 >= 100 ? 100 : this.stats.happiness + 10;\n        this.stats.productivity = this.stats.productivity + 1 >= 10 ? 10 : this.stats.productivity + 1;\n    }\n    demote(){\n        this.level -= 1;\n        //title will be change back in content\n        this.stats.happiness = this.stats.happiness - 10 <= 0 ? 0 : this.stats.happiness - 10;\n        this.stats.productivity = this.stats.productivity - 1 <= 0 ? 0 : this.stats.productivity - 1;\n    }\n    raiseSalary(){\n        this.salary += 10000;\n        //title will be change back in content\n        this.stats.happiness = this.stats.happiness + 10 >= 100 ? 100 : this.stats.happiness + 10;\n        this.stats.productivity = this.stats.productivity + 1 >= 10 ? 10 : this.stats.productivity + 1;\n    }\n    lowerSalary(){\n        this.salary -= 10000;\n        //title will be change back in content\n        this.stats.happiness = this.stats.happiness - 10 <= 0 ? 0 : this.stats.happiness - 10;\n        this.stats.productivity = this.stats.productivity - 1 <= 0 ? 0 : this.stats.productivity - 1;\n    }\n    makeRequest(){\n        this.currentRequest = true;\n    }\n    requestSatisfied(){\n        console.log('thanks, my request was satisified');\n        this.stats.happiness = this.stats.happiness + 10 >= 100 ? 100 : this.stats.happiness + 10;\n    }\n    requestDenied(){\n        console.log('that sucks, my request was denied');\n        this.stats.happiness = this.stats.happiness - 10 <= 0 ? 0 : this.stats.happiness - 10;\n    }\n    satisfy(amt){\n        this.stats.happiness = this.stats.happiness + amt >= 100 ? 100 : this.stats.happiness + amt;\n    }\n    updateSkills(projectSkills){\n\n    }\n    printInfo(){\n        console.log(\"employee info\");\n        console.log(this.name);\n        console.log('gender:',this.gender);\n        console.log('age:',this.age);\n        console.log('level:',this.level);\n        console.log('job', this.job);\n        console.log('stats:', this.stats)\n        console.log('salary', \"$\"+ this.salary);\n    }\n}\n\nexport default Employee","function MatchEmployeeToProject(employee,project){\n    let matchScore = 0;\n    const employeeSkills = Object.keys(employee.skillset);\n    for(let i = 0; i < employeeSkills.length; i++){\n        try{\n            if(project.requirements.required.includes(employeeSkills[i])){\n                matchScore+=1;\n            }\n            if(project.requirements.optional.includes(employeeSkills[i])){\n                matchScore+=.5;\n            }\n        }catch(e){\n            return 0\n        }\n        \n    }\n    return matchScore\n}\n\nexport default MatchEmployeeToProject","import Employee from './Employee';\nimport MatchEmployeeToProject from './MatchEmployeeToProject';\n\nfunction RandomEmployee(){\n    this.employeeId = 100000001;\n    this.maxLeaders = 2;\n    this.currentLeaders = 0;\n    this.usedNames = [];\n    this.femaleIcons = ['female-icon-1'];\n    this.maleIcons = ['male-icon-1'];\n    this.neutralIcons = ['male-icon-1'];\n}\n\nRandomEmployee.prototype.generateStartEmployees = function(numEmployees, numLeaders, startProjects){\n    console.log('generating start employees');\n    const employeesByProject = {}\n    //remove projects that aren't accepted from start projects\n    startProjects = startProjects.filter((project)=> project.accepted)\n    const employeeStats = {\n                            productivity: 0,\n                            happiness: 0,\n                            salary: 0,\n                          }\n    const startEmployees = [];\n    //generate random leader and add their stats to initial employee stats\n    for(let i = 0; i < numLeaders; i++){ \n        const employee = this.generateRandomEmployee(false,null,5);\n        employeeStats.productivity += employee.stats.productivity;\n        employeeStats.happiness += employee.stats.happiness;\n        employeeStats.salary += employee.salary;\n        startEmployees.push(employee);\n    }\n    //generate start employees\n    for(let i = 0; i < numEmployees; i++){\n        //choose project at random from start projects\n        //MTC this can be better -- use modulus to equally divide employees into projects\n        const project = this.randomFromArray(startProjects);\n        //generate new employee using that project and add their stats to initial employee stats\n        const employee = this.generateRandomEmployee(false,project);\n        employeeStats.productivity += employee.stats.productivity;\n        employeeStats.happiness += employee.stats.happiness;\n        employeeStats.salary += employee.salary;\n        const match = MatchEmployeeToProject(employee,project);\n        employee.match = match;\n        //add employee to project's workers array\n        project.workers.push(employee);\n        project.calculateProductivity();\n        //add to employee array\n        startEmployees.push(employee);\n        if(employee.projectId){\n            if(!employeesByProject[employee.projectId]){\n              employeesByProject[employee.projectId] = []\n            }\n            employeesByProject[employee.projectId].push(employee)\n        }\n    }\n    //average intial employee stats\n    for(let i in employeeStats){\n        employeeStats[i] = Math.floor(employeeStats[i]/(numEmployees))\n    }\n    return {\n        employees: startEmployees,\n        employeeStats: employeeStats,\n        startProjects: startProjects,\n        employeesByProject: employeesByProject\n    }\n}\n\nRandomEmployee.prototype.generateEmployeeID = function(){\n    const id = this.employeeId;\n    this.employeeId += 1;\n    return id\n}\n\nRandomEmployee.prototype.generateRandomEmployee = function(applicant, project, positionLevel){\n    // console.log(\"generating random employee\");\n    //generate ids for start employees only. Employees usually recieve id on hire.\n    const id = !applicant ? this.generateEmployeeID() : null;\n    //set random employee properties\n    const gender = this.randomGender();\n    const icon = gender === \"male\" ? this.randomFromArray(this.maleIcons) : gender === \"female\" ? this.randomFromArray(this.femaleIcons) : this.randomFromArray(this.neutralIcons);\n    const name = this.randomName(gender);\n    const age = this.randomBetweenInts(23,60);\n    // this can be cleaned up now that the leaders are created seperately\n    const maxLevel = this.currentLeaders >= 2 ? 4 : 5;\n    const level = positionLevel ? positionLevel : this.randomBetweenInts(1,maxLevel);\n    if(level === 3){\n        this.currentLeaders+=1;\n    }\n    //check employees' skills against project requirements\n\n    //generate random employee properties baded on level\n    const skillset = this.randomSkillset(level);\n    const stats = this.randomStats();\n    const salary = this.randomBetweenInts(4,4+(level*2)) * 10000;\n    //create and return new employee\n    const employee = new Employee(id,name,icon,gender,age,level,skillset.title,skillset.focus,skillset.skills, skillset.skillSet,stats, salary,project);\n    return employee\n}\n\nRandomEmployee.prototype.randomSkillset = function(level){\n    //skill areas and job title\n    const skillsets = {\n        ux: ['graphic designer','ux designer','ui designer'],\n        frontend: ['jr frontend dev','frontend dev','sr frontend dev'],\n        backend: ['jr backend dev','backend dev','sr backend dev'],\n        datascience: ['jr data analyst','data analyst','sr data analyst'],\n        management: ['cfo','cto','ceo']\n    }\n    //give all players two focuses. Only the first will be visible to the player.\n    const focii = Object.keys(skillsets);\n    // const fociiWithoutManagerial = focii.pop();\n    //All leaders aka level 5 employees focus on management.\n    const focusOne = level === 5 ? 'management' : this.randomFromArray(focii);\n    const focusTwo = this.randomFromArray(focii);\n    //select a bunch of random skills from those two focuses\n    const skillsSelection = this.randomSkills(focusOne,focusTwo);\n    const skills = [];\n    const skillSet = {};\n    for(let i = 0; i < skillsSelection.length; i++){\n        //put the first three items into a skills array, which will be the only skills visible to the player\n        if(i<=2){\n            skills.push(skillsSelection[i]);\n        }\n        //add all skills to the skillset and give them a random starting value, limited by the employees level\n        skillSet[skillsSelection[i]] = this.randomBetweenInts(0,5+level);\n    }\n    //get the employees title based on focus/level\n    const title = level === 5 ? this.randomFromArray(skillsets[focusOne]) : skillsets[focusOne][level-1];\n    return {\n        focus: focusOne,\n        skills: skills,\n        skillSet: skillSet,\n        title: title\n    }\n}\n\nRandomEmployee.prototype.randomSkills = function(focusOne,focusTwo){\n    const skills = {\n        ux: ['design','css','wireframing'],\n        frontend: ['css','html', 'jQuery','javascript'],\n        backend: ['javascript','express','python','sql'],\n        datascience: ['python','matplotlib','tensorflow'],\n        management: ['agile','kanban','motivation'],\n    }\n    let skillset = [];\n    if(focusOne !== focusTwo){\n        skillset.push(skills[focusOne][0])\n        skillset.push(skills[focusOne][1])\n        skillset.push(skills[focusOne][2])\n        skillset.push(skills[focusTwo][0])\n    } else {\n        skillset = skills[focusOne]\n    }\n    return skillset\n}\n\nRandomEmployee.prototype.randomStats = function(){\n    const stats = {\n        productivity: this.randomBetweenInts(1,101),\n        happiness: this.randomBetweenInts(30,101),\n        creativity: this.randomBetweenInts(1,101),\n        accuracy: this.randomBetweenInts(1,101),\n        curiosity: this.randomBetweenInts(1,101),\n        dedication: this.randomBetweenInts(1,101),\n    }\n    return stats\n}\n\nRandomEmployee.prototype.randomGender = function(){\n    const genders = ['male', 'female', 'neutral'];\n    const gender = this.randomFromArray(genders);\n    return gender\n}\n\nRandomEmployee.prototype.randomName = function(gender){\n    const first_name_male = ['Scott','Trevor','Sanjay','John','Julio','Adam','Bill','Dave','Deangelo','Eric'];\n    const first_name_female = ['Jill','Nancy','Maria','Ann','Sara','Julia','Bella','Simone','Angela','Kendra','Erica'];\n    const last_names = ['Jones','Paul','Smith','Johnson','Gupta','Sanchez','Saul','Lopez','Gupta','Wang','Devi','Liu','Chen','Khan','Ali','Johannes','Nguyen','Kim','Sato'];\n    let first_name;\n    if(gender === \"male\"){\n        first_name = this.randomFromArray(first_name_male);\n    } else if (gender === \"female\"){\n        first_name = this.randomFromArray(first_name_female);\n    } else {\n        const combine = first_name_male.concat(first_name_female);\n        first_name = this.randomFromArray(combine);\n    }\n    const lastName = this.randomFromArray(last_names);\n    return {\n            first:first_name, \n            last: lastName, \n            full:first_name + \" \" + lastName,\n            display: first_name.charAt(0) + \". \" + lastName,\n            short: first_name + \" \" + lastName.charAt(0) + \".\",\n            email: first_name.charAt(0) + lastName + '@'\n        }\n}\n\nRandomEmployee.prototype.randomFromArray = function(arr){\n    return arr[Math.floor(Math.random()*arr.length)]\n}\n\nRandomEmployee.prototype.randomBetweenInts = function(start,end){\n    return Math.floor(Math.random()*(end-start)) + start\n}\n\nexport default RandomEmployee","class Company{\n    constructor(name, shortName, sector, icon, rep){\n        this.name = name;\n        this.shortName = shortName;\n        this.sector = sector;\n        this.icon = icon;\n        this.activeProject = null;\n        this.completedProjects = 0;\n        this.satisfaction = 50;\n        this.quit = false;\n        this.rep = rep;\n    }\n    completeProject(){\n        this.completedProjects+= 1;\n        this.activeProject = null;\n    }\n    cancelProject(){\n        this.activeProject = null;\n        if(this.satisfaction === 0){\n            this.quit = true;\n        }\n    }\n}\n\nexport default Company","\nimport RandomEmployee from './RandomEmployee';\nimport Company from './Company';\n\nfunction RandomCompany(){\n    this.usedNames = [];\n    this.icons = ['arrows alternate','chart line','cloud download','location arrow','random',\n                  'share square', 'bullhorn', 'certificate',\n                ]\n    this.randomEmployee = new RandomEmployee();\n}\n\nRandomCompany.prototype.generateRandomCompany = function(){\n    const sectors = Object.keys(this.projectSectors);\n    const sector = this.randomFromArray(sectors);\n    const icon = this.randomFromArray(this.icons)\n    const names = this.randomCompanyName();\n    const rep = this.randomEmployee.generateRandomEmployee(false,null);\n    const company = new Company(names.name, names.shortName,sector,icon,rep)\n    return company\n}\n\nRandomCompany.prototype.randomCompanyName = function(){\n    const firstWords = [\"Inspire\", \"Revolution\", \"Domain\"];\n    const secondWords = [\"Digital\", \"Software\", \"Intelligence\"];\n    const r = Math.random();\n    const first = this.randomFromArray(firstWords);\n    const second = this.randomFromArray(secondWords);\n    const short = first[0] + second[0];\n    let name;\n    if(r < .5){\n        name = first + \" \" + second\n    } else {\n        name = second + \" \" + first\n    }\n    return {\n        name: name,\n        shortName: short,\n    }\n}\n\nRandomCompany.prototype.projectSectors = {\n    'healthcare': {\n        minCost: 2,\n        maxCost: 5,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n    'finance': {\n        minCost: 5,\n        maxCost: 10,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n    'housing': {\n        minCost: 2,\n        maxCost: 5,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n    'local business': {\n        minCost: 1,\n        maxCost: 3,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n}\n\nRandomCompany.prototype.randomFromArray = function(arr){\n    return arr[Math.floor(Math.random()*arr.length)]\n}\n\nexport default RandomCompany","\nclass Project{\n    constructor(id, company, name, shortName, sector,type, accepted, requirements,budget, estimatedMonthsToCompletion,monthsActive,percentComplete){\n        this.id = id;\n        this.company = company;\n        this.name = name;\n        this.shortName = shortName;\n        this.sector = sector;\n        this.type = type;\n        this.accepted = accepted;\n        this.considering = accepted;\n        this.requirements = requirements;\n        this.budget = budget;\n        this.totalPaid = 0;\n        this.payment = 0;\n        this.payInInstallments = true;\n        this.estimatedMonthsToCompletion = estimatedMonthsToCompletion;\n        this.monthsToCompletion = estimatedMonthsToCompletion;\n        this.monthsActive = monthsActive ? monthsActive : 0;\n        this.percentComplete = percentComplete ? percentComplete : 0;\n        this.onTime = true;\n        this.workers = [];\n        this.productivity = 0;\n        this.complete = false;\n        this.satisfaction = 100-(this.estimatedMonthsToCompletion-this.monthsActive); \n    }\n    addWorker(worker){\n        this.workers.push(worker);\n        this.calculateProductivity();\n    }\n    removeWorker(worker){\n        this.workers.filter((w) => worker.id !== w.id)\n        this.calculateProductivity();\n    }\n    calculateProductivity(workers){\n        console.log('calcluating prod:')\n        console.log(workers);\n        let productivity = 0;\n        if(workers && workers.length){\n            for(let i = 0; i < workers.length; i++){\n                if(!workers[i].onVacation){\n                    productivity += (workers[i].stats.productivity * workers[i].match);\n                }\n            }\n            productivity = Math.floor(productivity/this.workers.length);\n        }\n        this.percentComplete = this.percentComplete + productivity/30;\n        this.productivity = productivity;\n        const onTime = (this.estimatedMonthsToCompletion*productivity)/this.estimatedMonthsToCompletion;\n        console.log('on time calc',onTime);\n        this.onTime = onTime;\n    }\n    calculatePayment(){\n        this.monthsActive += 1;\n        this.payment = 0;\n        if(this.monthsActive >= this.estimatedMonthsToCompletion || this.percentComplete >= 100){\n            if(this.percentComplete === 100){\n                console.log('project complete')\n                this.complete = true;\n                if(this.payInInstallments){\n                    this.payment = Math.floor(this.budget/this.estimatedMonthsToCompletion)\n                } else {\n                    this.payment = this.budget;\n                }\n            } else {\n                console.log(\"you're still not done!?!?!\");\n                this.satisfaction -= 10;\n            }\n        } else {\n            if(this.payInInstallments){\n                console.log('paying in installments!')\n                this.payment = Math.floor(this.budget/this.estimatedMonthsToCompletion);\n                this.satisfaction += 1;\n            }\n        }\n        return this.payment\n    }\n    printInfo(){\n        console.log(\"project info\");\n        console.log(this.company);\n        console.log(this.name);\n        console.log('sector',this.sector);\n        console.log('type',this.type);\n        console.log('requirements',this.requirements);\n        console.log('budget',this.budget);\n        console.log('estimatedMonthsToCompletion',this.estimatedMonthsToCompletion);\n    }\n}\n\nexport default Project","\nimport Project from '../Scripts/Project';\n\nfunction RandomProject(){\n    this.projectId = 101;\n}\n\nRandomProject.prototype.generateRandomProject = function(company, isStartProject) {\n    // console.log('generating random project');\n    // console.log('company',company);\n    const id = this.projectId;\n    this.projectId += 1;\n    const sectors = Object.keys(this.projectSectors);\n    const sector = this.randomFromArray(sectors);\n    const types = Object.keys(this.projectTypes);\n    const type = this.randomFromArray(types);\n    const name = company.name + \" \" + type;\n    const shortName = company.shortName + \" \" + type;\n    const requirements = this.projectTypes[type];\n    const estimatedMonthsToCompletion = isStartProject ? this.randomBetweenInts(4,8): this.randomBetweenInts(6,18); \n    const monthsActive = isStartProject ? Math.floor(this.randomBetweenInts(0,estimatedMonthsToCompletion-2)): 0;\n    const percentComplete = Math.floor(monthsActive/estimatedMonthsToCompletion*100);\n    const budget = this.randomBetweenInts(5,250);\n    const adjustedBudget = budget * 1000;\n    const project = new Project(id, company, name,shortName, sector,type, isStartProject, requirements, adjustedBudget, estimatedMonthsToCompletion,monthsActive,percentComplete);\n    return project\n}\n\nRandomProject.prototype.projectSectors = {\n    'healthcare': {\n        minCost: 2,\n        maxCost: 5,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n    'finance': {\n        minCost: 5,\n        maxCost: 10,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n    'housing': {\n        minCost: 2,\n        maxCost: 5,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n    'local business': {\n        minCost: 1,\n        maxCost: 3,\n        minDesign: 2,\n        maxDesign: 5,\n        firstwords: [],\n        secondwords: [],\n    },\n}\n\nRandomProject.prototype.projectTypes = {\n    'website': {\n        required:['html','css','javascript'],\n        optional:['jQuery']\n    },\n    'web app': {\n        required: ['html','css','javascript'],\n        optional:['jQuery']\n    },\n    'mobile app': {\n        required: ['html','css','javascript'],\n        optional: ['jQuery']\n    },\n    'data platform': {\n        required:['python','sql','javascript'],\n        optional: ['jQuery']\n    },\n}\n\nRandomProject.prototype.randomFromArray = function(arr){\n    return arr[Math.floor(Math.random()*arr.length)]\n}\n\nRandomProject.prototype.randomBetweenInts = function(start,end){\n    return Math.floor(Math.random()*(end-start)) + start\n}\n\nexport default RandomProject","import RandomAgency from './RandomAgency';\nimport RandomCompany from './RandomCompany';\nimport RandomProject from './RandomProject';\n\nfunction Industry(){\n    this.clients = [];\n    this.competitors = [];\n    this.startCompetitors = 2;\n    this.maxCompetitors = 5;\n    this.randomCompany = new RandomCompany();\n    this.randomAgency = new RandomAgency();\n    this.randomProject = new RandomProject();\n    this.awake();\n}\n\nIndustry.prototype.awake = function(){\n    for(let i =0; i < this.startCompetitors; i++){\n        const competitor = this.randomAgency.generateRandomAgency();\n        this.competitors.push(competitor);\n    }\n    for(let i =0; i < this.startCompetitors; i++){\n        const client = this.randomCompany.generateRandomCompany();\n        this.clients.push(client);\n    }\n}\nIndustry.prototype.monthlyUpdate = function(){\n    for(let i = 0; i < this.competitors.length; i++){\n        //check if competitor has failed\n        //otherwise update competitors\n    }\n}\nIndustry.prototype.newProject = function(isStartProject){\n    const r = Math.random();\n    let client;\n    if(r < .2 || !this.competitors.length){\n        client = this.randomCompany.generateRandomCompany();\n        this.clients.push(client);\n    } else {\n        client = this.clients[Math.floor(Math.random()*this.clients.length)]\n    }\n    const project = this.randomProject.generateRandomProject(client,isStartProject);\n    return project\n}\n\nexport default Industry","import Helpers from './Helpers';\n\nfunction RandomEmail(){\n    this.helpers = new Helpers();\n}\n\nRandomEmail.prototype.generateRandomEmail = function(boss,employee1,employee2,time){\n    //emails from the boss get priority\n    const r = Math.random();\n    if(r < .1){\n        if(boss.stats.happiness > 60 || boss.stats.happiness < 30){\n            return this.bossEmail(boss)\n        } else {\n            return this.generateEmail(null,employee1,employee1,time)\n        }\n    } else if (r<.5 && r > .1 ) {\n        if(employee1.stats.happiness > 80){\n            //MTC needs to be replaced!\n            return this.happyEmail(employee1,time);\n        } else if (employee1.stats.happiness < 40) {\n            return this.complaintEmail(employee1,employee2,time);\n        } else {\n            return this.requestEmail(employee1,time);\n        }\n    } else {\n        return this.generateEmail(null,employee1,employee2,time);\n    }\n}\n\nRandomEmail.prototype.generateEmail = function(type,employee1,employee2,time){\n    console.log('gen email');\n    console.log(time);\n    let text;\n    let subject = 'Hello';\n    let sender = employee1;\n    //bring in time\n    // const time =  new Date().toLocaleString();\n    switch(type){\n\n        case 'start':\n            text = 'Hey, thanks for taking over the personnel decisions. Sure it shouldn\\'t be too hard!';\n            break \n\n        case 'applicant':\n            return this.applicantEmail(employee1,time)\n\n        case 'project':\n            return this.projectEmail(employee1,time)\n\n        case 'complete':\n            return this.completeEmail(employee1,employee2,time)\n\n        case 'welcome':\n            return this.welcomeEmail(employee1,time);\n\n        case 'quit':\n            return this.quitEmail(employee1,time);\n\n        default: \n            return this.junkEmail(employee1,time); \n    }\n    const email = {\n        subject: subject,\n        text: text,\n        sender: sender,\n        time: time,\n        read: false\n    }\n    return email\n}\n\nRandomEmail.prototype.junkEmail = function(employee,time){\n    const junkSubject = [\"Happy Birthday to \" + employee.name.first,'Hike this weekend'];\n    const junkBody = [\"Hey, it's \" + employee.name.display + \" 's birthday\",\"Hey, anybody up for a hike this weekend?\"];\n    const r = this.helpers.RandomBetweenInts(0,junkBody.length);\n    const email = {\n        subject: junkSubject[r],\n        text: junkBody[r],\n        sender: employee,\n        time: time,\n        type: \"request\",\n        subtype: \"junk\",\n        read: false,\n        importance: 0,\n    }\n    return email;\n}\n\nRandomEmail.prototype.requestEmail = function(employee,time){\n    const requestSubject = ['Request','Please help',\"Just a thought\"];\n    const requestBody = [\"Could we get a new coffee machine?\",\"I need some time off\"];\n    const requestType = ['money','time'];\n    const r = this.helpers.RandomBetweenInts(0,requestBody.length)\n    const email = {\n        subject: this.helpers.RandomFromArray(requestSubject),\n        text: requestBody[1],\n        sender: employee,\n        time: time,\n        read: false,\n        accept: true,\n        type:\"request\",\n        subtype: requestType[r],\n        importance: employee.level,\n        target: employee\n    }\n    return email;\n}\n\nRandomEmail.prototype.complaintEmail = function(employee1, employee2,time){\n    const complaintSubject = [\"A complaint\", \"I'm not happy\", \"We need to talk\",\"This sucks\"];\n    const complaintBody = [\"I don't like sitting next to \" + employee2.name.full + \". Can I move desks?\"];\n    const email = {\n        subject: this.helpers.RandomFromArray(complaintSubject),\n        text: this.helpers.RandomFromArray(complaintBody),\n        sender: employee1,\n        time: time,\n        read: false,\n        accept: true,\n        type:\"task\",\n        importance: employee1.level,\n        target: [employee1,employee2]\n    }\n    return email;\n}\n\nRandomEmail.prototype.applicantEmail = function(employee,time){\n    console.log('app email');\n    console.log(time);\n    const applicantSubject = [\"Application\", 'Open Position','Your job posting','I need a job'];\n    const applicantBody = [\n        \"Hello, my name is \" + employee.name.display + \" and I would like to apply for a position at your company. Attached, pleased find my resume and cover letter\",\n        \"Hi there, I saw your post advertising and open position. Thanks for considering me!\",\n        \"Regards, attached please find my resume for your positing of an open position. Thank you for your consideration\"\n    ];\n    const email = {\n        subject: this.helpers.RandomFromArray(applicantSubject),\n        text: this.helpers.RandomFromArray(applicantBody),\n        sender: employee,\n        time: time,\n        read: false,\n        consider: true,\n        accept: false,\n        target: employee,\n        type:\"application\",\n        importance: 3,\n    }\n    return email;\n}\n\nRandomEmail.prototype.projectEmail = function(project,time){\n    const email = {\n        subject: \"New project for \" + project.company.name,\n        text: \"Does your company have the bandwidth to complete a new \" + project.type + \" for \" +project.company.name + \"?\",\n        sender: project.company.rep,\n        time: time,\n        read: false,\n        consider: true,\n        target: project,\n        type:\"project\",\n        importance: 4,\n    }\n    return email;\n}\n\nRandomEmail.prototype.completeEmail = function(project,time){\n    const email = {\n        subject: \"Project complete for \" + project.company.name,\n        text: \"Congratulations on finishing the \" + project.type + \" for \" +project.company.name + \"?\",\n        sender: project.company.rep,\n        time: time,\n        read: false,\n        consider: true,\n        target: project,\n    }\n    return email;\n}\n\nRandomEmail.prototype.welcomeEmail = function(employee,time){\n    const email = {\n        subject: 'Thanks again',\n        text: \"Hey, thanks for taking over the personnel decisions. Sure it shouldn't be too hard!\",\n        sender: employee,\n        time: time,\n        read: false\n    }\n    return email;\n}\n\nRandomEmail.prototype.quitEmail = function(employee,time){\n    const quitSubject = ['I quit',\"I'm out\",'Notice of resignation',\"Can't take it\"]\n    const quitBody = [\n        \"I quit. Sincerely, \" + employee.name.display,\n        \"Sorry, I just hate it here. I quit. \",\n    ];\n    const email = {\n        subject: this.helpers.RandomFromArray(quitSubject),\n        text: this.helpers.RandomFromArray(quitBody),\n        sender: employee,\n        time: time,\n        read: false,\n        importance: employee.level,\n    }\n    return email;\n}\n\nRandomEmail.prototype.happyEmail = function(employee,time){\n    const happySubject = [\"Great news\",'Announcement',\"Let's celebrate\"];\n    const happyBody = [\n        \"Great news!, \" + employee.name.display + ' is having a baby!',  \"Hey guys, \" + employee.name.display + ' bachelor party is this weekend!',\n    ];\n    const email = {\n        subject: this.helpers.RandomFromArray(happySubject),\n        text: this.helpers.RandomFromArray(happyBody),\n        sender: employee,\n        time: time,\n        read: false\n    }\n    return email;\n}\n\nRandomEmail.prototype.bossEmail = function(boss,time){\n    const bossSubject = [\"I'm not happy\",\"Things are going great\"];\n    const bossBody = [\n        \"Boss email\",\n    ];\n    const email = {\n        subject: this.helpers.RandomFromArray(bossSubject),\n        text: this.helpers.RandomFromArray(bossBody),\n        sender: boss,\n        time: time,\n        read: false,\n        type:\"boss\",\n        importance: 5,\n    }\n    return email;\n}\n\nRandomEmail.prototype.fireEmail = function(boss,time){\n    const bossSubject = [\"This isn't working out\"];\n    const bossBody = [\n        \"Sorry things didn't work out, but I think you'll be happier at another company.\",\n    ];\n    const email = {\n        subject: this.helpers.RandomFromArray(bossSubject),\n        text: this.helpers.RandomFromArray(bossBody),\n        sender: boss,\n        time: time,\n        read: false\n    }\n    return email;\n}\n\nexport default RandomEmail","import Helpers from './Helpers';\n\nfunction RandomMessage(){\n    console.log('random message running');\n    this.helpers = new Helpers();\n}\n\nRandomMessage.prototype.generateRandomMessage = function(boss,employee1,employee2){\n    //emails from the boss get priority\n    if(boss.stats.happiness > 60 || boss.stats.happiness < 30){\n        return this.bossEmail()\n    } else {\n        if(employee1.stats.happiness > 80){\n\n        }\n    }\n}\n\nRandomMessage.prototype.generateMessage = function(type,time,employee1,employee2){\n    switch(type){\n\n        default: \n            return this.junkMessage(time,employee1); \n    }\n}\n\nRandomMessage.prototype.junkMessage = function(time,employee){\n    const junkMessages = [\"Hey guys there's cake in the break room\", \"Anyone have a spare phone charger?\",\n                          \"I found someone's phone charger\", \"Anyone up for a hike this weekend?\", \"Who's got spare bandwidth?\"\n                         ];\n    const text = this.helpers.RandomFromArray(junkMessages);\n    const message = this.message(employee.name.display,text,time,false);\n    return message\n}\n\nRandomMessage.prototype.message = function(sender,text,time,starred){\n    return {\n        sender: sender,\n        text: text,\n        time: time,\n        starred: starred\n    }\n}\n\n\n\n\n\nexport default RandomMessage","import React, {Component} from 'react';\n\nimport Header from '../Header';\nimport Main from '../Main';\nimport Sidebar from '../Sidebar';\nimport Message from '../Message';\n\nimport Player from '../../Scripts/Player'\nimport Industry from '../../Scripts/Industry';\nimport Agency from '../../Scripts/Agency';\n// import TaskManager from '../../Scripts/TaskManagers';\nimport RandomEmployee from '../../Scripts/RandomEmployee';\nimport RandomProject from '../../Scripts/RandomProject';\nimport RandomEmail from '../../Scripts/RandomEmail';\nimport RandomMessage from '../../Scripts/RandomMessage';\nimport Helpers from '../../Scripts/Helpers';\n\nimport '../../App.css';\n\n\nclass Content extends Component {\n  constructor(){\n    super();\n    this.state = {\n      //temp fix\n      fired: false,\n      industry: new Industry(),\n      agency: new Agency(),\n      player: new Player(),\n      sidebarRight: true,\n      projects: [],\n      totalPositions: 20,\n      employees: [],\n      employeeStats: {\n        productivity: 0,\n        happiness: 0,\n        salary: 0,\n      },\n      applicants: [],\n      tasks: [],\n      emails: [],\n      messages: [],\n      hour: 1,\n      day: 29,\n      month: 1,\n      year: 0,\n      startYear: null,\n      hourLength: 750,\n      timeRunning: false,\n      activePane: 0,\n      panes: [\n        {type:'email',pinned:true},\n        {type:'tasks',pinned:true}\n      ],\n      updateParams: {\n        emailFrequency: .15,\n        projectFrequency: .05,\n      },\n    }\n    // this.taskManager = new TaskManager();\n    this.randomEmployeeGenerator = new RandomEmployee();\n    this.randomProjectGenerator = new RandomProject();\n    this.randomEmailGenerator = new RandomEmail();\n    this.randomMessageGenerator = new RandomMessage();\n    this.helpers = new Helpers();\n  }\n  componentDidMount(){\n    this.start();\n  }\n  start = (numStartEmployees, numStartProjects) => {\n    console.log(\"starting game\");\n    const industry = new Industry();\n    const agency = new Agency();\n    const startProjects = [];\n    const startApplicants = [];\n    const startEmails = [];\n\n    const startYear = new Date().getFullYear() - 1;\n    const time = {\n      hour: this.state.hour,\n      day: this.state.day,\n      month: this.state.month,\n      year: startYear,\n      startYear: startYear,\n    }\n\n    const newProject = industry.newProject(false);\n    const newProjectEmail = this.randomEmailGenerator.generateEmail('project',newProject,null,time);\n    startEmails.push(newProjectEmail);\n\n    numStartProjects = numStartProjects ? numStartProjects : 3;\n    for(let i = 0 ; i < numStartProjects; i ++){\n      //generate one random applicant per current project\n      const applicant = this.randomEmployeeGenerator.generateRandomEmployee();\n      startApplicants.push(applicant);\n      const appEmail = this.randomEmailGenerator.generateEmail('applicant',applicant,null,time);\n      startEmails.push(appEmail);\n      //generate a random start project -- true flag means it will be in progress when it starts\n      const startProject = industry.newProject(true);\n      startProjects.push(startProject);\n    }\n    const startEmployees = this.randomEmployeeGenerator.generateStartEmployees(7,1,startProjects);\n\n    //now that employees have been assigned, update projects with employee info\n    for(let i = 0 ; i < startProjects.length; i ++){\n      startProjects[i].calculateProductivity(startEmployees.employeesByProject[startProjects[i].id]);\n    }\n\n    const sortedEmployees = this.sortEmployees(startEmployees.employees);\n    const welcomeEmail = this.randomEmailGenerator.generateEmail('start',sortedEmployees[0],null,time);\n\n    //update agency income/expenses based on employees/projects\n    agency.calculateAgencyParameters(startEmployees.employees,startProjects);\n\n    const startTask = this.createTask(\"hire a new employee\",3,\"hire\")\n\n    this.setState({\n      industry: industry,\n      agency: agency,\n      employees: sortedEmployees,\n      employeeStats: startEmployees.employeeStats,\n      projects: [newProject, ...startEmployees.startProjects],\n      applicants: startApplicants,\n      emails: [...startEmails,welcomeEmail],\n      tasks: [startTask],\n      startYear: startYear\n    })\n  }\n  startTimer = () => {\n    console.log('starting timer')\n    this.setState({\n      timeRunning: true\n    })\n    this.interval = setInterval(()=>{\n      this.update();\n    },this.state.hourLength)\n  }\n  update = () => {\n    //update time \n    const agency = this.state.agency;\n    let player = this.state.player;\n    let newEmployeeStats = this.state.employeeStats;\n    let hour = this.state.hour;\n    let day = this.state.day;\n    let month = this.state.month;\n    let year = this.state.year;\n    const employees = this.state.employees;\n    const applicants = this.state.applicants;\n    let projects = this.state.projects;\n    const tasks = this.state.tasks;\n    const emails = this.state.emails;\n    const messages = this.state.messages;\n    \n    const time = {\n      hour: this.state.hour,\n      day: this.state.day,\n      month: this.state.month,\n      year: this.state.year,\n      startYear: this.state.startYear,\n    }\n\n    const employeeStatsRaw = {\n      productivity: 0,\n      happiness: 0,\n      salary: 0,\n    }\n\n    if(this.state.hour >= 11){\n      //new day\n      hour = 0;\n      if(this.state.day >= 30){\n        //new month\n        day = 0;\n        if(this.state.month >= 12){\n          month = 1\n        } else {\n          //new year\n          month = this.state.month + 1;\n          year = this.state.year + 1;\n\n        }\n      } else {\n        day = this.state.day + 1;\n      }\n    } else {\n      hour = this.state.hour + 1;\n    }\n    \n    //daily updates\n    \n    //if the agency runs out of cash or the bosses happiness drops to 0\n    // you're fired\n    if(this.state.agency.coh <= 0 || this.state.employees[0].happiness <= 0){\n      const email = this.randomEmailGenerator.fireEmail(this.state.employees[0]);\n      emails.unshift(email);\n      this.setState({\n        emails: emails\n      })\n      return\n    }\n    //MTC select random update hour\n    // const updateHour = Math.floor(Math.random())\n    //daily updates\n    if(hour === 0){\n      //daily employee update\n      const employeesByProject = {}\n      for(let a = 0; a < employees.length; a++){\n        //run employee update method\n        employees[a].update();\n        if(employees[a].projectId){\n          if(!employeesByProject[employees[a].projectId]){\n            employeesByProject[employees[a].projectId] = []\n          }\n          employeesByProject[employees[a].projectId].push(employees[a])\n        }\n        //get new employee stats and add to stats dict\n        employeeStatsRaw.productivity += employees[a].stats.productivity\n        employeeStatsRaw.happiness += employees[a].stats.happiness\n        employeeStatsRaw.salary += employees[a].stats.salary\n        //flag and remove employees who have quit\n        if(employees[a]['quit']){\n          const t = this.createTask(\"hire a new employee to replace \" + employees[a].name.display,employees[a].level,\"hire\")\n          tasks.push(t);\n          const quitEmail = this.randomEmailGenerator.generateEmail('quit',employees[a],null,time);\n          emails.unshift(quitEmail);\n          employees.splice(a,1);\n          player.decrementReputation();\n        }\n      }\n      newEmployeeStats = {\n        productivity: Math.floor(employeeStatsRaw.productivity/employees.length),\n        happiness: Math.floor(employeeStatsRaw.happiness/employees.length),\n        salary: Math.floor(employeeStatsRaw.salary/employees.length),\n      }\n      const projectsToDelete = [];\n      //daily project update\n      for(let a = 0; a < projects.length; a++){\n        //update project productivity \n        projects[a].calculateProductivity(employeesByProject[projects[a].id]);\n        //find completed projects\n        if(projects[a].complete){\n          projectsToDelete.push(projects[a]);\n          const endTask = this.createTask(\"find a new project\",3,\"project\")\n          tasks.push(endTask);\n          player.augmentScore(10);\n          player.augmentReputation();\n          player.augmentHappiness();\n        }\n      }\n      //remove completed projects\n      for(let b = 0; b < projectsToDelete.length; b++){\n        projects.splice(projectsToDelete[b],1);\n      }\n    } \n    \n    //hourly random events\n    const r = Math.random();\n    if(r < this.state.updateParams.emailFrequency){\n    // if(true){\n      //generate random emails\n      const boss = employees[0];\n      const employee1 = this.helpers.RandomFromArray(employees);\n      const employee2 = this.helpers.RandomFromArray(employees);\n      // console.log(employee);\n      const email = this.randomEmailGenerator.generateRandomEmail(boss,employee1,employee2,time);\n      emails.unshift(email)\n      \n      //generate random message\n      const employee3 = this.helpers.RandomFromArray(employees);\n      const message = this.randomMessageGenerator.generateMessage(null,\"3:00pm\",employee3);\n      messages.push(message)\n\n      if(hour%2===0 && this.state.applicants < 8){\n        //generate a new applicant\n        if(this.state.applicants.length < 10){\n          const applicant = this.randomEmployeeGenerator.generateRandomEmployee();\n          applicants.push(applicant);\n          const appEmail = this.randomEmailGenerator.generateEmail('applicant',applicant,null,time);\n          emails.unshift(appEmail);\n        }\n      }\n      if(r < this.state.updateParams.projectFrequency){\n        //send a new project offer\n        if(this.state.projects.length < 10){\n          //generate new project\n          //add: be able to use an old company\n          const project = this.state.industry.newProject();\n          projects.push(project);\n          const newProjectEmail = this.randomEmailGenerator.generateEmail('project',project,null,time);\n          emails.unshift(newProjectEmail);\n        }\n      }\n    }\n\n    //monthly updates\n    if(hour === 0 && day === 30){\n      projects = agency.monthlyUpdate(projects);\n    }\n\n    //constrain maximum amount of emails/messages\n    const finalEmails = emails.length > 100 ? emails.splice(0,100) : emails;\n    const finalMessages = messages.length > 100 ? messages.splice(0,100) : messages;\n    //set new state\n    this.setState({\n      hour: hour,\n      day: day,\n      month: month,\n      year: year,\n      employees: employees,\n      projects: projects,\n      emails: finalEmails,\n      messages: finalMessages,\n      tasks: tasks,\n      agency: agency,\n      employeeStats: newEmployeeStats,\n      player: player,\n    })\n  }\n  stopTimer = () => {\n    console.log('stopping timer')\n    clearInterval(this.interval);\n    this.setState({\n      timeRunning: false\n    })\n  }\n  hireApplicant = (applicant) => {\n    //mtc check to see if this completes a task\n    console.log('hiring applicant', applicant)\n    //TODO need to get new id number for applicant\n    applicant.id = this.randomEmployeeGenerator.generateEmployeeID();\n    const agency = this.state.agency;\n    const employees = this.sortEmployees([applicant, ...this.state.employees])\n    agency.calculateAgencyParameters(employees,this.state.projects);\n    this.setState({\n      employees: employees,\n      applicants:  this.state.applicants.filter((a) => applicant.id !== a.id),\n      agency: agency\n    })\n  }\n  dismissApplicant = (info) => {\n    console.log('dismissing applicant', info)\n    this.setState({\n      applicants:  this.state.applicants.filter((applicant) => applicant.id !== info.id)\n    })\n  }\n  updateEmployee = (updatedEmployee) => {\n    //mtc check to see if this completes a task\n    console.log('updating employee');\n    console.log(updatedEmployee);\n    const employees = this.state.employees.map((employee) => employee.id !== updatedEmployee.id ? employee: updatedEmployee);\n    if(updatedEmployee.projectId === null){\n      updatedEmployee.project.removeWorker(updatedEmployee);\n    }\n    updatedEmployee.project.calculateProductivity();\n    const projects = this.state.projects.filter((project) => project.id !== updatedEmployee.project.id ? project : updatedEmployee.project);\n    const agency = this.state.agency;\n    agency.calculateAgencyParameters(employees,projects);\n    console.log(updatedEmployee);\n    this.setState({\n      employees: employees,\n      projects: projects,\n      agency: agency\n    })\n  }\n  updateEmployeeLevel = (updatedEmployee) => {\n    //mtc check to see if this completes a task\n    console.log('promoting or demoting employee');\n    const employees = this.state.employees.map((employee) => employee.id !== updatedEmployee.id ? employee: updatedEmployee);\n    this.setState({\n      employees: employees\n    })\n  }\n  fireEmployee = (info) => {\n    console.log('firing employee', info)\n    const employees = this.state.employees.filter((employee) => employee.id !== info);\n    const sortedEmployees = this.sortEmployees(employees);\n    const agency = this.state.agency;\n    //mtc check to see if this completes a task, and remove task\n    agency.calculateAgencyParameters(employees,this.state.projects);\n    this.setState({\n      employees: sortedEmployees,\n      panes: this.state.panes.filter((pane) => pane.id !== \"employee_\"+info),\n      activePane: this.state.activePane - 1,\n    })\n  }\n  sortEmployees = (employees) => {\n    return employees.sort(function(a,b){return b.level - a.level})\n  }\n  sendEmail = (email) => {\n    const player = this.state.player;\n    const agency = this.state.agency;\n    let employees = this.state.employees;\n    if(email.type === 'request'){\n      player.augmentReputation();\n      player.decrementHappiness();\n      agency.debit(email.cost);\n      employees = employees.map((employee)=>{employee.satisfy(10);return employee})\n    } else {\n      player.decrementReputation();\n    }\n    this.setState({\n       emails: [email, ...this.state.emails],\n       employees: employees,\n       agency: agency,\n       player: player\n    })\n  }\n  readEmail = (i) => {\n    console.log('reading email');\n    const updatedEmail = this.state.emails[i];\n    updatedEmail.read = true;\n    const emails = this.state.emails.map((email,x) => x !== i ? email: updatedEmail);\n    this.setState({\n      emails: emails\n    })\n  }\n  archiveEmail = (i) => {\n    console.log('archiving email');\n    const updatedEmail = this.state.emails[i];\n    updatedEmail.archived = true;\n    const emails = this.state.emails.map((email,x) => x !== i ? email: updatedEmail);\n    this.setState({\n      emails: emails\n    })\n  }\n  deleteEmail = (i) => {\n    this.setState({\n      emails: this.state.emails.filter((email,x) => x !== i)\n    })\n  }\n  createTask = (text,urgency,action,requester,type,target) => {\n    const task = {\n      text: text,\n      urgency: urgency,\n      requester: requester ? requester : \"\",\n      type: type,\n      target: target,\n      action: action\n    };\n    return task\n  }\n  generateTask = (text,urgency,requester,type,target,action) => {\n    console.log('generating task')\n    const player = this.state.player;\n    player.augmentReputation();\n    const newTask = this.createTask(text,urgency,requester,type,target,action);\n    this.setState({\n       tasks: [newTask, ...this.state.tasks],\n       player: player\n    })\n  }\n  resolveTask = (i, task) => {\n    console.log('resolving task: ');\n    console.log(task)\n    const player = this.state.player;\n    const agency = this.state.agency;\n    player.augmentReputation();\n    let employees = this.state.employees;\n    let tasks = this.state.tasks;\n    if(task){\n       //increase employee happiness because of resolved task\n      \n      if(task.type === \"request\"){\n        if(task.subtype){\n          if(task.subtype === \"money\"){\n            agency.debit(task.importance * (this.state.year - this.state.startYear))\n          } else if (task.subtype === \"time\"){\n            task.target.vacation(task.target.level)\n          }\n        }\n      }\n      if(task.type === \"request\" || task.type === \"task\"){\n        task.target.requestSatisfied();\n        employees = this.state.employees.map((employee) => employee.id !== task.target.id ? employee: task.target);\n      } \n    }\n    //only remove existing tasks -- ie tasks that have an index number\n    if(i){\n      tasks = this.state.tasks.filter((t,x) => x !== t)\n    }\n    \n    this.setState({\n      tasks: tasks,\n      player: player,\n      employees: employees,\n      agency: agency,\n    })\n  }\n  dismissTask = (i, task) => {\n    console.log('dismissing tasks')\n    let tasks = i ?this.state.tasks.filter((task,x) => x!==i ): this.state.tasks;\n    const player = this.state.player;\n    player.decrementReputation();\n    let employees = this.state.employees;\n    if(task){\n       //increase employee happiness because of resolved task\n      if(task.type === \"request\" || task.type === \"task\"){\n        task.target.requestDenied();\n        employees = this.state.employees.map((employee) => employee.id !== task.target.id ? employee: task.target);\n      } \n    }\n    this.setState({\n       tasks: tasks,\n       player: player,\n       employees: employees\n    })\n  }\n  checkTaskResolution = (array,taskType,targetId) => {\n    for(let i = 0; i < array.length; i++){\n      if(array[i].type === taskType){\n        console.log('task found')\n      }\n    }\n  }\n  addMessage = (message) => {\n    this.setState({\n      messages: [...this.state.messages,message]\n    })\n  }\n  considerProject = (consideredProject) => {\n    console.log('considering project', consideredProject);\n    consideredProject.considering = true;\n    const projects = this.state.projects.map((project) => project.id !== consideredProject.id ? project: consideredProject);\n    this.setState({\n      projects: projects\n    })\n  }\n  acceptProject = (consideredProject) => {\n    console.log('accepting project', consideredProject);\n    consideredProject.accepted = true;\n    const projects = this.state.projects.map((project) => project.id !== consideredProject.id ? project: consideredProject);\n    console.log(projects);\n    this.setState({\n      projects: projects\n    })\n  }\n  rejectProject = (rejectedProject) => {\n    console.log('rejecting project', rejectedProject)\n    this.setState({\n      projects: this.state.projects.filter((project) => project.id !== rejectedProject)\n    })\n  }\n  withdrawProject = (withdrawnProject) => {\n    console.log('withdraw project', withdrawnProject)\n    //call to industry to decrease company satisfaction\n    console.log(this.state.projects);\n    this.setState({\n      projects: this.state.projects.filter((project) => project.id !== withdrawnProject),\n      panes: this.state.panes.filter((pane) => pane.id !== \"project_\"+withdrawnProject),\n      activePane: this.state.activePane - 1\n    })\n  }\n  addPane = (type,info) => {\n    console.log('adding pane',info);\n    const id = type+\"_\"+info.id;\n    //check to see if the request pane if already open\n    for(let i = 0; i < this.state.panes.length; i++){\n      console.log('id',this.state.panes[i].id)\n      if(this.state.panes[i].id === id){\n        this.setState({\n          activePane: i\n        })\n        return\n      }\n    }\n    const pane = {type:type,info:info,pinned:false,id:type+\"_\"+info.id}\n    this.setState({\n      panes: [...this.state.panes,pane],\n      activePane: this.state.panes.length\n    })\n  }\n  removePane = (i) => {\n    console.log('removing pane', i);\n    const activePane = this.state.activePane === i ? i - 1: this.state.activePane;\n    console.log('old active pane', this.state.activePane);\n    console.log('new active pane', activePane);\n    this.setState({\n       panes: this.state.panes.filter((pane,x) => i !== x),\n       activePane: activePane\n    })\n  }\n  updatePane = (i) => {\n    this.setState({\n      activePane: i\n    })\n  }\n  openMessage = (text) => {\n    this.setState({\n      message: text\n    })\n  }\n  closeMessage = () => {\n    this.setState({\n      message: null\n    })\n  }\n  render(){\n    // console.log('content state', this.state)\n    return (\n      <React.Fragment>\n          <div className=\"app\">\n                      <Sidebar  employees={this.state.employees} \n                                projects={this.state.projects} \n                                applicants={this.state.applicants} \n                                addPane={this.addPane}\n                                dismissApplicant={this.dismissApplicant}\n                      />\n                        <div className=\"main-container\">\n                        <Header \n                          hour={this.state.hour} \n                          day={this.state.day}\n                          month={this.state.month}\n                          year={this.state.year}\n                          startYear={this.state.startYear}\n                          timeRunning={this.state.timeRunning}   \n                          startTimer={this.startTimer} \n                          stopTimer={this.stopTimer}\n                          agency={this.state.agency}\n                          projects={this.state.projects}\n                          industry={this.state.industry}\n                          employeeStats={this.state.employeeStats}\n                          score={this.state.player.score}\n                          reputation={this.state.player.reputation}\n                          />\n                          \n                          <Main panes={this.state.panes} \n                                activePane={this.state.activePane}\n                                addPane={this.addPane}\n                                updatePane={this.updatePane} \n                                removePane={this.removePane}\n                                hireApplicant={this.hireApplicant}\n                                dismissApplicant={this.dismissApplicant}\n                                updateEmployee={this.updateEmployee}\n                                updateEmployeeLevel={this.updateEmployeeLevel}\n                                fireEmployee={this.fireEmployee}\n                                generateTask={this.generateTask}\n                                dismissTask={this.dismissTask}\n                                resolveTask={this.resolveTask}\n                                considerProject={this.considerProject}\n                                acceptProject={this.acceptProject}\n                                rejectProject={this.rejectProject}\n                                withdrawProject={this.withdrawProject}\n                                readEmail={this.readEmail}\n                                sendEmail={this.sendEmail}\n                                archiveEmail={this.archiveEmail}\n                                emails={this.state.emails}\n                                tasks={this.state.tasks}\n                                projects={this.state.projects}\n                                employees={this.state.employees} \n                                />\n                        </div>\n                <footer></footer>\n                </div>\n                <Message open={this.state.messageOpen} closeMessage={this.closeMessage} messages={this.state.messages} addMessage={this.addMessage}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Content;\n","import React, {Component} from 'react';\n\nimport Content from '../Content';\n\nimport '../../App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      testing: true,\n    }\n  }\n  //build out login/logout\n  render(){\n    return (\n      <Content testing={this.state.testing}/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}